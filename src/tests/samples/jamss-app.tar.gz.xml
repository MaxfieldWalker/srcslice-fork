<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" url="jamss-app.tar.gz" pos:tabs="8">

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C" filename="jamss-app2/sensor.h" pos:tabs="8" hash="1d532c6787d23a71b6ac5268567336a4726262c2"><cpp:ifndef pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">ifndef<pos:position pos:line="1" pos:column="8"/></cpp:directive> <name pos:line="1" pos:column="9">SENSOR_H<pos:position pos:line="1" pos:column="17"/></name></cpp:ifndef>
<cpp:define pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">define<pos:position pos:line="2" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="2" pos:column="9">SENSOR_H<pos:position pos:line="2" pos:column="17"/></name></cpp:macro></cpp:define>

<cpp:include pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">include<pos:position pos:line="4" pos:column="9"/></cpp:directive> <cpp:file pos:line="4" pos:column="10">"ev3api.h"<pos:position pos:line="4" pos:column="20"/></cpp:file></cpp:include>

<decl_stmt><decl><specifier pos:line="6" pos:column="1">extern<pos:position pos:line="6" pos:column="7"/></specifier> <type><specifier pos:line="6" pos:column="8">const<pos:position pos:line="6" pos:column="13"/></specifier> <name pos:line="6" pos:column="14">int<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">SENSOR_MAX_DEG<pos:position pos:line="6" pos:column="32"/></name></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>

<typedef pos:line="8" pos:column="1">typedef <type><struct pos:line="8" pos:column="9">struct <name pos:line="8" pos:column="16">control_input<pos:position pos:line="8" pos:column="29"/></name><block pos:line="8" pos:column="29">{
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">distance<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">distance_from_std<pos:position pos:line="10" pos:column="24"/></name></decl>;<pos:position pos:line="10" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">colorid_t<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">color<pos:position pos:line="11" pos:column="18"/></name></decl>;<pos:position pos:line="11" pos:column="19"/></decl_stmt>
}<pos:position pos:line="12" pos:column="2"/></block></struct></type> <name pos:line="12" pos:column="3">t_control_input<pos:position pos:line="12" pos:column="18"/></name>;<pos:position pos:line="12" pos:column="19"/></typedef>

<function_decl><type><name pos:line="14" pos:column="1">void<pos:position pos:line="14" pos:column="5"/></name></type> <name pos:line="14" pos:column="6">fetch_control_input<pos:position pos:line="14" pos:column="25"/></name><parameter_list pos:line="14" pos:column="25">()<pos:position pos:line="14" pos:column="27"/></parameter_list>;<pos:position pos:line="14" pos:column="28"/></function_decl>

<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>
</unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C" filename="jamss-app2/actuator.h" pos:tabs="8" hash="ac35ca73e75146694fc7b3cdabab69375e0297a0"><cpp:ifndef pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">ifndef<pos:position pos:line="1" pos:column="8"/></cpp:directive> <name pos:line="1" pos:column="9">ACTUATOR_H<pos:position pos:line="1" pos:column="19"/></name></cpp:ifndef>
<cpp:define pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">define<pos:position pos:line="2" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="2" pos:column="9">ACTUATOR_H<pos:position pos:line="2" pos:column="19"/></name></cpp:macro></cpp:define>

<cpp:include pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">include<pos:position pos:line="4" pos:column="9"/></cpp:directive> <cpp:file pos:line="4" pos:column="10">"ev3api.h"<pos:position pos:line="4" pos:column="20"/></cpp:file></cpp:include>

<typedef pos:line="6" pos:column="1">typedef <type><struct pos:line="6" pos:column="9">struct <name pos:line="6" pos:column="16">control_output<pos:position pos:line="6" pos:column="30"/></name><block pos:line="6" pos:column="30">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">speed_l<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">speed_r<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">speed_sensor<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
}<pos:position pos:line="10" pos:column="2"/></block></struct></type> <name pos:line="10" pos:column="3">t_control_output<pos:position pos:line="10" pos:column="19"/></name>;<pos:position pos:line="10" pos:column="20"/></typedef>

<function_decl><type><name pos:line="12" pos:column="1">void<pos:position pos:line="12" pos:column="5"/></name></type> <name pos:line="12" pos:column="6">sensor_motor_rotate<pos:position pos:line="12" pos:column="25"/></name><parameter_list pos:line="12" pos:column="25">(<parameter><decl><type><name pos:line="12" pos:column="26">int<pos:position pos:line="12" pos:column="29"/></name></type> <name pos:line="12" pos:column="30">speed<pos:position pos:line="12" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="12" pos:column="36"/></parameter_list>;<pos:position pos:line="12" pos:column="37"/></function_decl>
<function_decl><type><name pos:line="13" pos:column="1">void<pos:position pos:line="13" pos:column="5"/></name></type> <name pos:line="13" pos:column="6">motor_run<pos:position pos:line="13" pos:column="15"/></name><parameter_list pos:line="13" pos:column="15">()<pos:position pos:line="13" pos:column="17"/></parameter_list>;<pos:position pos:line="13" pos:column="18"/></function_decl>
<function_decl><type><name pos:line="14" pos:column="1">void<pos:position pos:line="14" pos:column="5"/></name></type> <name pos:line="14" pos:column="6">lcd_show<pos:position pos:line="14" pos:column="14"/></name><parameter_list pos:line="14" pos:column="14">(<parameter><decl><type><name pos:line="14" pos:column="15">int<pos:position pos:line="14" pos:column="18"/></name></type> <name pos:line="14" pos:column="19">clk_count<pos:position pos:line="14" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="14" pos:column="29"/></parameter_list>;<pos:position pos:line="14" pos:column="30"/></function_decl>

<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>
</unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C" filename="jamss-app2/app.h" pos:tabs="8" hash="e199083f1f086f2ca81609a7344c5f0bebf52611"><comment type="block" pos:line="1" pos:column="1">/*
 *  TOPPERS/ASP Kernel
 *      Toyohashi Open Platform for Embedded Real-Time Systems/
 *      Advanced Standard Profile Kernel
 *
 *  Copyright (C) 2000-2003 by Embedded and Real-Time Systems Laboratory
 *                              Toyohashi Univ. of Technology, JAPAN
 *  Copyright (C) 2004-2010 by Embedded and Real-Time Systems Laboratory
 *              Graduate School of Information Science, Nagoya Univ., JAPAN
 *
 *  上記著作権者は，以下の(1)〜(4)の条件を満たす場合に限り，本ソフトウェ
 *  ア（本ソフトウェアを改変したものを含む．以下同じ）を使用・複製・改
 *  変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
 *  (1) 本ソフトウェアをソースコードの形で利用する場合には，上記の著作
 *      権表示，この利用条件および下記の無保証規定が，そのままの形でソー
 *      スコード中に含まれていること．
 *  (2) 本ソフトウェアを，ライブラリ形式など，他のソフトウェア開発に使
 *      用できる形で再配布する場合には，再配布に伴うドキュメント（利用
 *      者マニュアルなど）に，上記の著作権表示，この利用条件および下記
 *      の無保証規定を掲載すること．
 *  (3) 本ソフトウェアを，機器に組み込むなど，他のソフトウェア開発に使
 *      用できない形で再配布する場合には，次のいずれかの条件を満たすこ
 *      と．
 *    (a) 再配布に伴うドキュメント（利用者マニュアルなど）に，上記の著
 *        作権表示，この利用条件および下記の無保証規定を掲載すること．
 *    (b) 再配布の形態を，別に定める方法によって，TOPPERSプロジェクトに
 *        報告すること．
 *  (4) 本ソフトウェアの利用により直接的または間接的に生じるいかなる損
 *      害からも，上記著作権者およびTOPPERSプロジェクトを免責すること．
 *      また，本ソフトウェアのユーザまたはエンドユーザからのいかなる理
 *      由に基づく請求からも，上記著作権者およびTOPPERSプロジェクトを
 *      免責すること．
 *
 *  本ソフトウェアは，無保証で提供されているものである．上記著作権者お
 *  よびTOPPERSプロジェクトは，本ソフトウェアに関して，特定の使用目的
 *  に対する適合性も含めて，いかなる保証も行わない．また，本ソフトウェ
 *  アの利用により直接的または間接的に生じたいかなる損害に関しても，そ
 *  の責任を負わない．
 *
 *  $Id: sample1.h 2416 2012-09-07 08:06:20Z ertl-hiro $
 */</comment>

<comment type="block" pos:line="43" pos:column="1">/*
 *		サンプルプログラム(1)のヘッダファイル
 */</comment>

<comment type="block" pos:line="47" pos:column="1">/*
 *  ターゲット依存の定義
 */</comment>
<cpp:include pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">include<pos:position pos:line="50" pos:column="9"/></cpp:directive> <cpp:file pos:line="50" pos:column="10">"target_test.h"<pos:position pos:line="50" pos:column="25"/></cpp:file></cpp:include>

<comment type="block" pos:line="52" pos:column="1">/*
 *  各タスクの優先度の定義
 */</comment>

<cpp:define pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">define<pos:position pos:line="56" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="56" pos:column="9">MAIN_PRIORITY<pos:position pos:line="56" pos:column="22"/></name></cpp:macro>	<cpp:value pos:line="56" pos:column="25">5<pos:position pos:line="56" pos:column="26"/></cpp:value></cpp:define>		<comment type="block" pos:line="56" pos:column="41">/* メインタスクの優先度 */</comment>
								<comment type="block" pos:line="57" pos:column="65">/* HIGH_PRIORITYより高くすること */</comment>

<cpp:define pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">define<pos:position pos:line="59" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="59" pos:column="9">HIGH_PRIORITY<pos:position pos:line="59" pos:column="22"/></name></cpp:macro>	<cpp:value pos:line="59" pos:column="25">9<pos:position pos:line="59" pos:column="26"/></cpp:value></cpp:define>		<comment type="block" pos:line="59" pos:column="41">/* 並行実行されるタスクの優先度 */</comment>
<cpp:define pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">define<pos:position pos:line="60" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="60" pos:column="9">MID_PRIORITY<pos:position pos:line="60" pos:column="21"/></name></cpp:macro>	<cpp:value pos:line="60" pos:column="25">10<pos:position pos:line="60" pos:column="27"/></cpp:value></cpp:define>
<cpp:define pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">define<pos:position pos:line="61" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="61" pos:column="9">LOW_PRIORITY<pos:position pos:line="61" pos:column="21"/></name></cpp:macro>	<cpp:value pos:line="61" pos:column="25">11<pos:position pos:line="61" pos:column="27"/></cpp:value></cpp:define>

<comment type="block" pos:line="63" pos:column="1">/*
 *  ターゲットに依存する可能性のある定数の定義
 */</comment>

<cpp:ifndef pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">ifndef<pos:position pos:line="67" pos:column="8"/></cpp:directive> <name pos:line="67" pos:column="9">STACK_SIZE<pos:position pos:line="67" pos:column="19"/></name></cpp:ifndef>
<cpp:define pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">define<pos:position pos:line="68" pos:column="8"/></cpp:directive>	<cpp:macro><name pos:line="68" pos:column="9">STACK_SIZE<pos:position pos:line="68" pos:column="19"/></name></cpp:macro>		<cpp:value pos:line="68" pos:column="33">4096<pos:position pos:line="68" pos:column="37"/></cpp:value></cpp:define>		<comment type="block" pos:line="68" pos:column="49">/* タスクのスタックサイズ */</comment>
<cpp:endif pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">endif<pos:position pos:line="69" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="69" pos:column="8">/* STACK_SIZE */</comment>

<cpp:ifndef pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">ifndef<pos:position pos:line="71" pos:column="8"/></cpp:directive> <name pos:line="71" pos:column="9">LOOP_REF<pos:position pos:line="71" pos:column="17"/></name></cpp:ifndef>
<cpp:define pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">define<pos:position pos:line="72" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="72" pos:column="9">LOOP_REF<pos:position pos:line="72" pos:column="17"/></name></cpp:macro>		<cpp:value pos:line="72" pos:column="33">ULONG_C(1000000)<pos:position pos:line="72" pos:column="49"/></cpp:value></cpp:define>	<comment type="block" pos:line="72" pos:column="57">/* 速度計測用のループ回数 */</comment>
<cpp:endif pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">endif<pos:position pos:line="73" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="73" pos:column="8">/* LOOP_REF */</comment>

<comment type="block" pos:line="75" pos:column="1">/*
 *  関数のプロトタイプ宣言
 */</comment>
<cpp:ifndef pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">ifndef<pos:position pos:line="78" pos:column="8"/></cpp:directive> <name pos:line="78" pos:column="9">TOPPERS_MACRO_ONLY<pos:position pos:line="78" pos:column="27"/></name></cpp:ifndef>

<function_decl><specifier pos:line="80" pos:column="1">extern<pos:position pos:line="80" pos:column="7"/></specifier> <type><name pos:line="80" pos:column="8">void<pos:position pos:line="80" pos:column="12"/></name></type>	<name pos:line="80" pos:column="17">task<pos:position pos:line="80" pos:column="21"/></name><parameter_list pos:line="80" pos:column="21">(<parameter><decl><type><name pos:line="80" pos:column="22">intptr_t<pos:position pos:line="80" pos:column="30"/></name></type> <name pos:line="80" pos:column="31">exinf<pos:position pos:line="80" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="80" pos:column="37"/></parameter_list>;<pos:position pos:line="80" pos:column="38"/></function_decl>
<function_decl><specifier pos:line="81" pos:column="1">extern<pos:position pos:line="81" pos:column="7"/></specifier> <type><name pos:line="81" pos:column="8">void<pos:position pos:line="81" pos:column="12"/></name></type>	<name pos:line="81" pos:column="17">main_task<pos:position pos:line="81" pos:column="26"/></name><parameter_list pos:line="81" pos:column="26">(<parameter><decl><type><name pos:line="81" pos:column="27">intptr_t<pos:position pos:line="81" pos:column="35"/></name></type> <name pos:line="81" pos:column="36">exinf<pos:position pos:line="81" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="81" pos:column="42"/></parameter_list>;<pos:position pos:line="81" pos:column="43"/></function_decl>
<function_decl><specifier pos:line="82" pos:column="1">extern<pos:position pos:line="82" pos:column="7"/></specifier> <type><name pos:line="82" pos:column="8">void<pos:position pos:line="82" pos:column="12"/></name></type> <name pos:line="82" pos:column="13">balance_task<pos:position pos:line="82" pos:column="25"/></name><parameter_list pos:line="82" pos:column="25">(<parameter><decl><type><name pos:line="82" pos:column="26">intptr_t<pos:position pos:line="82" pos:column="34"/></name></type> <name pos:line="82" pos:column="35">exinf<pos:position pos:line="82" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="82" pos:column="41"/></parameter_list>;<pos:position pos:line="82" pos:column="42"/></function_decl>
<function_decl><specifier pos:line="83" pos:column="1">extern<pos:position pos:line="83" pos:column="7"/></specifier> <type><name pos:line="83" pos:column="8">void<pos:position pos:line="83" pos:column="12"/></name></type> <name pos:line="83" pos:column="13">idle_task<pos:position pos:line="83" pos:column="22"/></name><parameter_list pos:line="83" pos:column="22">(<parameter><decl><type><name pos:line="83" pos:column="23">intptr_t<pos:position pos:line="83" pos:column="31"/></name></type> <name pos:line="83" pos:column="32">exinf<pos:position pos:line="83" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="83" pos:column="38"/></parameter_list>;<pos:position pos:line="83" pos:column="39"/></function_decl>
<comment type="line" pos:line="84" pos:column="1">//extern void	tex_routine(TEXPTN texptn, intptr_t exinf);</comment>
<comment type="line" pos:line="85" pos:column="1">//#ifdef CPUEXC1</comment>
<comment type="line" pos:line="86" pos:column="1">//extern void	cpuexc_handler(void *p_excinf);</comment>
<comment type="line" pos:line="87" pos:column="1">//#endif /* CPUEXC1 */</comment>
<comment type="line" pos:line="88" pos:column="1">//extern void	cyclic_handler(intptr_t exinf);</comment>
<comment type="line" pos:line="89" pos:column="1">//extern void	alarm_handler(intptr_t exinf);</comment>
<comment type="line" pos:line="90" pos:column="1">//</comment>
<comment type="line" pos:line="91" pos:column="1">//extern void	gpio_handler_initialize(intptr_t exinf);</comment>
<comment type="line" pos:line="92" pos:column="1">//extern void	gpio_handler(void);</comment>
<function_decl><specifier pos:line="93" pos:column="1">extern<pos:position pos:line="93" pos:column="7"/></specifier> <type><name pos:line="93" pos:column="8">void<pos:position pos:line="93" pos:column="12"/></name></type>	<name pos:line="93" pos:column="17">gpio_irq_dispatcher<pos:position pos:line="93" pos:column="36"/></name><parameter_list pos:line="93" pos:column="36">(<parameter><decl><type><name pos:line="93" pos:column="37">intptr_t<pos:position pos:line="93" pos:column="45"/></name></type> <name pos:line="93" pos:column="46">exinf<pos:position pos:line="93" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="93" pos:column="52"/></parameter_list>;<pos:position pos:line="93" pos:column="53"/></function_decl>
<comment type="line" pos:line="94" pos:column="1">//</comment>
<comment type="line" pos:line="95" pos:column="1">//extern void	uart_sensor_monitor(intptr_t exinf);</comment>
<comment type="line" pos:line="96" pos:column="1">//</comment>
<comment type="line" pos:line="97" pos:column="1">//extern void	ev3_uart_cyclic_handler(intptr_t exinf);</comment>
<comment type="line" pos:line="98" pos:column="1">//extern void	ev3_uart_daemon(intptr_t exinf);</comment>
<comment type="line" pos:line="99" pos:column="1">//extern void	ev3_uart_port2_irq(void);</comment>
<comment type="line" pos:line="100" pos:column="1">//</comment>
<comment type="line" pos:line="101" pos:column="1">//extern void initialize_ev3(intptr_t exinf);</comment>

<cpp:endif pos:line="103" pos:column="1">#<cpp:directive pos:line="103" pos:column="2">endif<pos:position pos:line="103" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="103" pos:column="8">/* TOPPERS_MACRO_ONLY */</comment>
</unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C" filename="jamss-app2/sound.h" pos:tabs="8" hash="8fc9e5de7e6bd3a488711275173433bc42ee913c"><cpp:ifndef pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">ifndef<pos:position pos:line="1" pos:column="8"/></cpp:directive> <name pos:line="1" pos:column="9">SOUND_H<pos:position pos:line="1" pos:column="16"/></name></cpp:ifndef>
<cpp:define pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">define<pos:position pos:line="2" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="2" pos:column="9">SOUND_H<pos:position pos:line="2" pos:column="16"/></name></cpp:macro></cpp:define>

<cpp:include pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">include<pos:position pos:line="4" pos:column="9"/></cpp:directive> <cpp:file pos:line="4" pos:column="10">"ev3api.h"<pos:position pos:line="4" pos:column="20"/></cpp:file></cpp:include>

<function_decl><type><name pos:line="6" pos:column="1">void<pos:position pos:line="6" pos:column="5"/></name></type> <name pos:line="6" pos:column="6">play_material_sound<pos:position pos:line="6" pos:column="25"/></name><parameter_list pos:line="6" pos:column="25">()<pos:position pos:line="6" pos:column="27"/></parameter_list>;<pos:position pos:line="6" pos:column="28"/></function_decl>
<function_decl><type><name pos:line="7" pos:column="1">void<pos:position pos:line="7" pos:column="5"/></name></type> <name pos:line="7" pos:column="6">play_goal_sound<pos:position pos:line="7" pos:column="21"/></name><parameter_list pos:line="7" pos:column="21">()<pos:position pos:line="7" pos:column="23"/></parameter_list>;<pos:position pos:line="7" pos:column="24"/></function_decl>

<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>
</unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C" filename="jamss-app2/sound.c" pos:tabs="8" hash="40fef58072737db79b489e035689782fc8639712"><cpp:include pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">include<pos:position pos:line="1" pos:column="9"/></cpp:directive> <cpp:file pos:line="1" pos:column="10">"sound.h"<pos:position pos:line="1" pos:column="19"/></cpp:file></cpp:include>

<comment type="block" pos:line="3" pos:column="1">/**
  * Play material sound!
  */</comment>
<function><type><name pos:line="6" pos:column="1">void<pos:position pos:line="6" pos:column="5"/></name></type> <name pos:line="6" pos:column="6">play_material_sound<pos:position pos:line="6" pos:column="25"/></name><parameter_list pos:line="6" pos:column="25">()<pos:position pos:line="6" pos:column="27"/></parameter_list> <block pos:line="6" pos:column="28">{
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">ev3_speaker_play_tone<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><name pos:line="7" pos:column="25">NOTE_C5<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="34">100<pos:position pos:line="7" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">tslp_tsk<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><literal type="number" pos:line="8" pos:column="12">100<pos:position pos:line="8" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">ev3_speaker_play_tone<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">NOTE_DS5<pos:position pos:line="9" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="35">100<pos:position pos:line="9" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">tslp_tsk<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="number" pos:line="10" pos:column="12">100<pos:position pos:line="10" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">ev3_speaker_play_tone<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><name pos:line="11" pos:column="25">NOTE_CS5<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="35">100<pos:position pos:line="11" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">tslp_tsk<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><literal type="number" pos:line="12" pos:column="12">100<pos:position pos:line="12" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">ev3_speaker_play_tone<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">NOTE_E5<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="34">100<pos:position pos:line="13" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">tslp_tsk<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><literal type="number" pos:line="14" pos:column="12">100<pos:position pos:line="14" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">ev3_speaker_play_tone<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">NOTE_D5<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="34">100<pos:position pos:line="15" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">tslp_tsk<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="number" pos:line="16" pos:column="12">100<pos:position pos:line="16" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">ev3_speaker_play_tone<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">NOTE_F5<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="34">100<pos:position pos:line="17" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">tslp_tsk<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><literal type="number" pos:line="18" pos:column="12">100<pos:position pos:line="18" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">ev3_speaker_play_tone<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">NOTE_FS5<pos:position pos:line="19" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="35">200<pos:position pos:line="19" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">tslp_tsk<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><literal type="number" pos:line="20" pos:column="12">200<pos:position pos:line="20" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="17"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function>

<comment type="block" pos:line="23" pos:column="1">/**
  * Play goal sound!
  */</comment>
<function><type><name pos:line="26" pos:column="1">void<pos:position pos:line="26" pos:column="5"/></name></type> <name pos:line="26" pos:column="6">play_goal_sound<pos:position pos:line="26" pos:column="21"/></name><parameter_list pos:line="26" pos:column="21">()<pos:position pos:line="26" pos:column="23"/></parameter_list> <block pos:line="26" pos:column="24">{
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">ev3_speaker_play_tone<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><name pos:line="27" pos:column="25">NOTE_F5<pos:position pos:line="27" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="34">150<pos:position pos:line="27" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">tslp_tsk<pos:position pos:line="28" pos:column="11"/></name><argument_list pos:line="28" pos:column="11">(<argument><expr><literal type="number" pos:line="28" pos:column="12">200<pos:position pos:line="28" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">ev3_speaker_play_tone<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name pos:line="29" pos:column="25">NOTE_F5<pos:position pos:line="29" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="34">150<pos:position pos:line="29" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">tslp_tsk<pos:position pos:line="30" pos:column="11"/></name><argument_list pos:line="30" pos:column="11">(<argument><expr><literal type="number" pos:line="30" pos:column="12">200<pos:position pos:line="30" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">ev3_speaker_play_tone<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><name pos:line="31" pos:column="25">NOTE_F5<pos:position pos:line="31" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="34">150<pos:position pos:line="31" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">tslp_tsk<pos:position pos:line="32" pos:column="11"/></name><argument_list pos:line="32" pos:column="11">(<argument><expr><literal type="number" pos:line="32" pos:column="12">200<pos:position pos:line="32" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">ev3_speaker_play_tone<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">(<argument><expr><name pos:line="33" pos:column="25">NOTE_F5<pos:position pos:line="33" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="34">150<pos:position pos:line="33" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">tslp_tsk<pos:position pos:line="34" pos:column="11"/></name><argument_list pos:line="34" pos:column="11">(<argument><expr><literal type="number" pos:line="34" pos:column="12">200<pos:position pos:line="34" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">ev3_speaker_play_tone<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">(<argument><expr><name pos:line="35" pos:column="25">NOTE_DS5<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="35">150<pos:position pos:line="35" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="36" pos:column="3">tslp_tsk<pos:position pos:line="36" pos:column="11"/></name><argument_list pos:line="36" pos:column="11">(<argument><expr><literal type="number" pos:line="36" pos:column="12">400<pos:position pos:line="36" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="37" pos:column="3">ev3_speaker_play_tone<pos:position pos:line="37" pos:column="24"/></name><argument_list pos:line="37" pos:column="24">(<argument><expr><name pos:line="37" pos:column="25">NOTE_G5<pos:position pos:line="37" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="34">200<pos:position pos:line="37" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="38" pos:column="3">tslp_tsk<pos:position pos:line="38" pos:column="11"/></name><argument_list pos:line="38" pos:column="11">(<argument><expr><literal type="number" pos:line="38" pos:column="12">400<pos:position pos:line="38" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">ev3_speaker_play_tone<pos:position pos:line="39" pos:column="24"/></name><argument_list pos:line="39" pos:column="24">(<argument><expr><name pos:line="39" pos:column="25">NOTE_F5<pos:position pos:line="39" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="34">1000<pos:position pos:line="39" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">tslp_tsk<pos:position pos:line="40" pos:column="11"/></name><argument_list pos:line="40" pos:column="11">(<argument><expr><literal type="number" pos:line="40" pos:column="12">100<pos:position pos:line="40" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="17"/></expr_stmt>
}<pos:position pos:line="41" pos:column="2"/></block></function>
</unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C" filename="jamss-app2/global.h" pos:tabs="8" hash="d8e5b0f163b90e14aeac67efef2afbe0c1c7bdd1"><cpp:ifndef pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">ifndef<pos:position pos:line="1" pos:column="8"/></cpp:directive> <name pos:line="1" pos:column="9">GLOBAL_H<pos:position pos:line="1" pos:column="17"/></name></cpp:ifndef>
<cpp:define pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">define<pos:position pos:line="2" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="2" pos:column="9">GLOBAL_H<pos:position pos:line="2" pos:column="17"/></name></cpp:macro></cpp:define>

<cpp:include pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">include<pos:position pos:line="4" pos:column="9"/></cpp:directive> <cpp:file pos:line="4" pos:column="10">"sensor.h"<pos:position pos:line="4" pos:column="20"/></cpp:file></cpp:include>
<cpp:include pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">include<pos:position pos:line="5" pos:column="9"/></cpp:directive> <cpp:file pos:line="5" pos:column="10">"actuator.h"<pos:position pos:line="5" pos:column="22"/></cpp:file></cpp:include>

<typedef pos:line="7" pos:column="1">typedef <type><enum pos:line="7" pos:column="9">enum <name pos:line="7" pos:column="14">status<pos:position pos:line="7" pos:column="20"/></name> <block pos:line="7" pos:column="21">{
  <decl><name pos:line="8" pos:column="3">s2_ready<pos:position pos:line="8" pos:column="11"/></name></decl>,
  <decl><name pos:line="9" pos:column="3">s2_normal<pos:position pos:line="9" pos:column="12"/></name></decl>,
  <decl><name pos:line="10" pos:column="3">s2_back<pos:position pos:line="10" pos:column="10"/></name></decl>,
  <decl><name pos:line="11" pos:column="3">s2_rotate<pos:position pos:line="11" pos:column="12"/></name></decl>,
  <decl><name pos:line="12" pos:column="3">s2_rotate_after<pos:position pos:line="12" pos:column="18"/></name></decl>,
}<pos:position pos:line="13" pos:column="2"/></block></enum></type> <name pos:line="13" pos:column="3">t_status<pos:position pos:line="13" pos:column="11"/></name>;<pos:position pos:line="13" pos:column="12"/></typedef>


<decl_stmt><decl><specifier pos:line="16" pos:column="1">extern<pos:position pos:line="16" pos:column="7"/></specifier> <type><specifier pos:line="16" pos:column="8">const<pos:position pos:line="16" pos:column="13"/></specifier> <name pos:line="16" pos:column="14">int<pos:position pos:line="16" pos:column="17"/></name></type> <name pos:line="16" pos:column="18">touch_sensor<pos:position pos:line="16" pos:column="30"/></name></decl>;<pos:position pos:line="16" pos:column="31"/></decl_stmt>
<decl_stmt><decl><specifier pos:line="17" pos:column="1">extern<pos:position pos:line="17" pos:column="7"/></specifier> <type><specifier pos:line="17" pos:column="8">const<pos:position pos:line="17" pos:column="13"/></specifier> <name pos:line="17" pos:column="14">int<pos:position pos:line="17" pos:column="17"/></name></type> <name pos:line="17" pos:column="18">color_sensor<pos:position pos:line="17" pos:column="30"/></name></decl>;<pos:position pos:line="17" pos:column="31"/></decl_stmt>
<decl_stmt><decl><specifier pos:line="18" pos:column="1">extern<pos:position pos:line="18" pos:column="7"/></specifier> <type><specifier pos:line="18" pos:column="8">const<pos:position pos:line="18" pos:column="13"/></specifier> <name pos:line="18" pos:column="14">int<pos:position pos:line="18" pos:column="17"/></name></type> <name pos:line="18" pos:column="18">left_motor<pos:position pos:line="18" pos:column="28"/></name></decl>;<pos:position pos:line="18" pos:column="29"/></decl_stmt>
<decl_stmt><decl><specifier pos:line="19" pos:column="1">extern<pos:position pos:line="19" pos:column="7"/></specifier> <type><specifier pos:line="19" pos:column="8">const<pos:position pos:line="19" pos:column="13"/></specifier> <name pos:line="19" pos:column="14">int<pos:position pos:line="19" pos:column="17"/></name></type> <name pos:line="19" pos:column="18">right_motor<pos:position pos:line="19" pos:column="29"/></name></decl>;<pos:position pos:line="19" pos:column="30"/></decl_stmt>
<decl_stmt><decl><specifier pos:line="20" pos:column="1">extern<pos:position pos:line="20" pos:column="7"/></specifier> <type><specifier pos:line="20" pos:column="8">const<pos:position pos:line="20" pos:column="13"/></specifier> <name pos:line="20" pos:column="14">int<pos:position pos:line="20" pos:column="17"/></name></type> <name pos:line="20" pos:column="18">sensor_motor<pos:position pos:line="20" pos:column="30"/></name></decl>;<pos:position pos:line="20" pos:column="31"/></decl_stmt>
<decl_stmt><decl><specifier pos:line="21" pos:column="1">extern<pos:position pos:line="21" pos:column="7"/></specifier> <type><specifier pos:line="21" pos:column="8">const<pos:position pos:line="21" pos:column="13"/></specifier> <name pos:line="21" pos:column="14">int<pos:position pos:line="21" pos:column="17"/></name></type> <name pos:line="21" pos:column="18">ultrasonic_sensor<pos:position pos:line="21" pos:column="35"/></name></decl>;<pos:position pos:line="21" pos:column="36"/></decl_stmt>

<decl_stmt><decl><specifier pos:line="23" pos:column="1">extern<pos:position pos:line="23" pos:column="7"/></specifier> <type><name pos:line="23" pos:column="8">int<pos:position pos:line="23" pos:column="11"/></name></type> <name><name pos:line="23" pos:column="12">g_n_distance<pos:position pos:line="23" pos:column="24"/></name><index pos:line="23" pos:column="24">[<expr><literal type="number" pos:line="23" pos:column="25">161<pos:position pos:line="23" pos:column="28"/></literal></expr>]<pos:position pos:line="23" pos:column="29"/></index></name></decl>;<pos:position pos:line="23" pos:column="30"/></decl_stmt>
<decl_stmt><decl><specifier pos:line="24" pos:column="1">extern<pos:position pos:line="24" pos:column="7"/></specifier> <type><name pos:line="24" pos:column="8">int<pos:position pos:line="24" pos:column="11"/></name></type> <name pos:line="24" pos:column="12">g_sensor_direction<pos:position pos:line="24" pos:column="30"/></name></decl>;<pos:position pos:line="24" pos:column="31"/></decl_stmt>
<decl_stmt><decl><specifier pos:line="25" pos:column="1">extern<pos:position pos:line="25" pos:column="7"/></specifier> <type><name pos:line="25" pos:column="8">t_control_input<pos:position pos:line="25" pos:column="23"/></name></type> <name pos:line="25" pos:column="24">g_in<pos:position pos:line="25" pos:column="28"/></name></decl>;<pos:position pos:line="25" pos:column="29"/></decl_stmt>
<decl_stmt><decl><specifier pos:line="26" pos:column="1">extern<pos:position pos:line="26" pos:column="7"/></specifier> <type><name pos:line="26" pos:column="8">t_control_output<pos:position pos:line="26" pos:column="24"/></name></type> <name pos:line="26" pos:column="25">g_out<pos:position pos:line="26" pos:column="30"/></name></decl>;<pos:position pos:line="26" pos:column="31"/></decl_stmt>

<decl_stmt><decl><specifier pos:line="28" pos:column="1">extern<pos:position pos:line="28" pos:column="7"/></specifier> <type><name pos:line="28" pos:column="8">t_status<pos:position pos:line="28" pos:column="16"/></name></type> <name pos:line="28" pos:column="17">g_status<pos:position pos:line="28" pos:column="25"/></name></decl>;<pos:position pos:line="28" pos:column="26"/></decl_stmt>
<decl_stmt><decl><specifier pos:line="29" pos:column="1">extern<pos:position pos:line="29" pos:column="7"/></specifier> <type><name pos:line="29" pos:column="8">int<pos:position pos:line="29" pos:column="11"/></name></type> <name pos:line="29" pos:column="12">g_clk_count<pos:position pos:line="29" pos:column="23"/></name></decl>;<pos:position pos:line="29" pos:column="24"/></decl_stmt>
<decl_stmt><decl><specifier pos:line="30" pos:column="1">extern<pos:position pos:line="30" pos:column="7"/></specifier> <type><name pos:line="30" pos:column="8">int<pos:position pos:line="30" pos:column="11"/></name></type> <name pos:line="30" pos:column="12">g_step_back_count<pos:position pos:line="30" pos:column="29"/></name></decl>;<pos:position pos:line="30" pos:column="30"/></decl_stmt>
<decl_stmt><decl><specifier pos:line="31" pos:column="1">extern<pos:position pos:line="31" pos:column="7"/></specifier> <type><name pos:line="31" pos:column="8">int<pos:position pos:line="31" pos:column="11"/></name></type> <name pos:line="31" pos:column="12">g_normal_out_count<pos:position pos:line="31" pos:column="30"/></name></decl>;<pos:position pos:line="31" pos:column="31"/></decl_stmt>
<decl_stmt><decl><specifier pos:line="32" pos:column="1">extern<pos:position pos:line="32" pos:column="7"/></specifier> <type><name pos:line="32" pos:column="8">colorid_t<pos:position pos:line="32" pos:column="17"/></name></type> <name pos:line="32" pos:column="18">g_prev_color<pos:position pos:line="32" pos:column="30"/></name></decl>;<pos:position pos:line="32" pos:column="31"/></decl_stmt>

<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif<pos:position pos:line="34" pos:column="7"/></cpp:directive></cpp:endif>
</unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C" filename="jamss-app2/control.h" pos:tabs="8" hash="175ecac5f81b770220e701e32d7175879d4a0e62"><cpp:ifndef pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">ifndef<pos:position pos:line="1" pos:column="8"/></cpp:directive> <name pos:line="1" pos:column="9">CONTROL_H<pos:position pos:line="1" pos:column="18"/></name></cpp:ifndef>
<cpp:define pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">define<pos:position pos:line="2" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="2" pos:column="9">CONTROL_H<pos:position pos:line="2" pos:column="18"/></name></cpp:macro></cpp:define>

<decl_stmt><decl><specifier pos:line="4" pos:column="1">extern<pos:position pos:line="4" pos:column="7"/></specifier> <type><specifier pos:line="4" pos:column="8">const<pos:position pos:line="4" pos:column="13"/></specifier> <name pos:line="4" pos:column="14">int<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">SENSOR_CALIB_COUNT<pos:position pos:line="4" pos:column="36"/></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
<decl_stmt><decl><specifier pos:line="5" pos:column="1">extern<pos:position pos:line="5" pos:column="7"/></specifier> <type><specifier pos:line="5" pos:column="8">const<pos:position pos:line="5" pos:column="13"/></specifier> <name pos:line="5" pos:column="14">int<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">SENSOR_SPEED<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
<decl_stmt><decl><specifier pos:line="6" pos:column="1">extern<pos:position pos:line="6" pos:column="7"/></specifier> <type><specifier pos:line="6" pos:column="8">const<pos:position pos:line="6" pos:column="13"/></specifier> <name pos:line="6" pos:column="14">int<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">MAX_STEP_BACK_COUNT<pos:position pos:line="6" pos:column="37"/></name></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>
<decl_stmt><decl><specifier pos:line="7" pos:column="1">extern<pos:position pos:line="7" pos:column="7"/></specifier> <type><specifier pos:line="7" pos:column="8">const<pos:position pos:line="7" pos:column="13"/></specifier> <name pos:line="7" pos:column="14">int<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">MOTOR_SPEED<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
<decl_stmt><decl><specifier pos:line="8" pos:column="1">extern<pos:position pos:line="8" pos:column="7"/></specifier> <type><specifier pos:line="8" pos:column="8">const<pos:position pos:line="8" pos:column="13"/></specifier> <name pos:line="8" pos:column="14">int<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">MOTOR_ROTATE_SPEED<pos:position pos:line="8" pos:column="36"/></name></decl>;<pos:position pos:line="8" pos:column="37"/></decl_stmt>
<decl_stmt><decl><specifier pos:line="9" pos:column="1">extern<pos:position pos:line="9" pos:column="7"/></specifier> <type><specifier pos:line="9" pos:column="8">const<pos:position pos:line="9" pos:column="13"/></specifier> <name pos:line="9" pos:column="14">int<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">SENSOR_DISTANCE_BORDER<pos:position pos:line="9" pos:column="40"/></name></decl>;<pos:position pos:line="9" pos:column="41"/></decl_stmt>
<decl_stmt><decl><specifier pos:line="10" pos:column="1">extern<pos:position pos:line="10" pos:column="7"/></specifier> <type><specifier pos:line="10" pos:column="8">const<pos:position pos:line="10" pos:column="13"/></specifier> <name pos:line="10" pos:column="14">int<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">NORMAL_KEEP_COUNT<pos:position pos:line="10" pos:column="35"/></name></decl>;<pos:position pos:line="10" pos:column="36"/></decl_stmt>
<decl_stmt><decl><specifier pos:line="11" pos:column="1">extern<pos:position pos:line="11" pos:column="7"/></specifier> <type><specifier pos:line="11" pos:column="8">const<pos:position pos:line="11" pos:column="13"/></specifier> <name pos:line="11" pos:column="14">int<pos:position pos:line="11" pos:column="17"/></name></type> <name pos:line="11" pos:column="18">ROTATE_COUNT<pos:position pos:line="11" pos:column="30"/></name></decl>;<pos:position pos:line="11" pos:column="31"/></decl_stmt>

<function_decl><type><name pos:line="13" pos:column="1">void<pos:position pos:line="13" pos:column="5"/></name></type> <name pos:line="13" pos:column="6">control_main<pos:position pos:line="13" pos:column="18"/></name><parameter_list pos:line="13" pos:column="18">()<pos:position pos:line="13" pos:column="20"/></parameter_list>;<pos:position pos:line="13" pos:column="21"/></function_decl>

<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
</unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C" filename="jamss-app2/sensor.c" pos:tabs="8" hash="fbd24ad41a31ecebef3f780782b5cec0b19ab916"><cpp:include pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">include<pos:position pos:line="1" pos:column="9"/></cpp:directive> <cpp:file pos:line="1" pos:column="10">"sensor.h"<pos:position pos:line="1" pos:column="20"/></cpp:file></cpp:include>
<cpp:include pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">include<pos:position pos:line="2" pos:column="9"/></cpp:directive> <cpp:file pos:line="2" pos:column="10">"global.h"<pos:position pos:line="2" pos:column="20"/></cpp:file></cpp:include>
<cpp:include pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">include<pos:position pos:line="3" pos:column="9"/></cpp:directive> <cpp:file pos:line="3" pos:column="10">&lt;stdlib.h&gt;<pos:position pos:line="3" pos:column="23"/></cpp:file></cpp:include>

<decl_stmt><decl><type><specifier pos:line="5" pos:column="1">const<pos:position pos:line="5" pos:column="6"/></specifier> <name pos:line="5" pos:column="7">int<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">SENSOR_MAX_DEG<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><literal type="number" pos:line="5" pos:column="28">80<pos:position pos:line="5" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>

<function><type><name pos:line="7" pos:column="1">void<pos:position pos:line="7" pos:column="5"/></name></type> <name pos:line="7" pos:column="6">fetch_control_input<pos:position pos:line="7" pos:column="25"/></name><parameter_list pos:line="7" pos:column="25">()<pos:position pos:line="7" pos:column="27"/></parameter_list><block pos:line="7" pos:column="27">{
  <comment type="line" pos:line="8" pos:column="3">// distance</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">d<pos:position pos:line="9" pos:column="8"/></name> <init pos:line="9" pos:column="9">= <expr><call><name pos:line="9" pos:column="11">ev3_ultrasonic_sensor_get_distance<pos:position pos:line="9" pos:column="45"/></name><argument_list pos:line="9" pos:column="45">(<argument><expr><name pos:line="9" pos:column="46">ultrasonic_sensor<pos:position pos:line="9" pos:column="63"/></name></expr></argument>)<pos:position pos:line="9" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="65"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">sensor_motor_deg<pos:position pos:line="10" pos:column="23"/></name> <init pos:line="10" pos:column="24">= <expr><call><name pos:line="10" pos:column="26">ev3_motor_get_counts<pos:position pos:line="10" pos:column="46"/></name><argument_list pos:line="10" pos:column="46">(<argument><expr><name pos:line="10" pos:column="47">sensor_motor<pos:position pos:line="10" pos:column="59"/></name></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="61"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">di<pos:position pos:line="11" pos:column="9"/></name> <init pos:line="11" pos:column="10">= <expr><name pos:line="11" pos:column="12">sensor_motor_deg<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">+<pos:position pos:line="11" pos:column="30"/></operator> <name pos:line="11" pos:column="31">SENSOR_MAX_DEG<pos:position pos:line="11" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="46"/></decl_stmt>
  <expr_stmt><expr><name pos:line="12" pos:column="3">di<pos:position pos:line="12" pos:column="5"/></name> <operator pos:line="12" pos:column="6">=<pos:position pos:line="12" pos:column="7"/></operator> <ternary><condition><expr><name pos:line="12" pos:column="8">di<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">&lt;<pos:position pos:line="12" pos:column="15"/></operator> <literal type="number" pos:line="12" pos:column="13">0<pos:position pos:line="12" pos:column="14"/></literal></expr> ?<pos:position pos:line="12" pos:column="16"/></condition><then pos:line="12" pos:column="16"> <expr><literal type="number" pos:line="12" pos:column="17">0<pos:position pos:line="12" pos:column="18"/></literal></expr> <pos:position pos:line="12" pos:column="19"/></then><else pos:line="12" pos:column="19">: <expr><ternary><condition><expr><name pos:line="12" pos:column="21">SENSOR_MAX_DEG<pos:position pos:line="12" pos:column="35"/></name> <operator pos:line="12" pos:column="36">*<pos:position pos:line="12" pos:column="37"/></operator> <literal type="number" pos:line="12" pos:column="38">2<pos:position pos:line="12" pos:column="39"/></literal> <operator pos:line="12" pos:column="40">&lt;<pos:position pos:line="12" pos:column="44"/></operator> <name pos:line="12" pos:column="42">di<pos:position pos:line="12" pos:column="44"/></name></expr> ?<pos:position pos:line="12" pos:column="46"/></condition><then pos:line="12" pos:column="46"> <expr><name pos:line="12" pos:column="47">SENSOR_MAX_DEG<pos:position pos:line="12" pos:column="61"/></name> <operator pos:line="12" pos:column="62">*<pos:position pos:line="12" pos:column="63"/></operator> <literal type="number" pos:line="12" pos:column="64">2<pos:position pos:line="12" pos:column="65"/></literal></expr> <pos:position pos:line="12" pos:column="66"/></then><else pos:line="12" pos:column="66">: <expr><name pos:line="12" pos:column="68">di<pos:position pos:line="12" pos:column="70"/></name></expr></else></ternary></expr></else></ternary></expr>;<pos:position pos:line="12" pos:column="71"/></expr_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int<pos:position pos:line="13" pos:column="6"/></name></type> <name pos:line="13" pos:column="7">distance_from_std<pos:position pos:line="13" pos:column="24"/></name> <init pos:line="13" pos:column="25">= <expr><call><name pos:line="13" pos:column="27">abs<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><name><name pos:line="13" pos:column="31">g_n_distance<pos:position pos:line="13" pos:column="43"/></name><index pos:line="13" pos:column="43">[<expr><name pos:line="13" pos:column="44">di<pos:position pos:line="13" pos:column="46"/></name></expr>]<pos:position pos:line="13" pos:column="47"/></index></name> <operator pos:line="13" pos:column="48">-<pos:position pos:line="13" pos:column="49"/></operator> <name pos:line="13" pos:column="50">d<pos:position pos:line="13" pos:column="51"/></name></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="53"/></decl_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">g_in<pos:position pos:line="14" pos:column="7"/></name><operator pos:line="14" pos:column="7">.<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">distance<pos:position pos:line="14" pos:column="16"/></name></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="19">d<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">g_in<pos:position pos:line="15" pos:column="7"/></name><operator pos:line="15" pos:column="7">.<pos:position pos:line="15" pos:column="8"/></operator><name pos:line="15" pos:column="8">distance_from_std<pos:position pos:line="15" pos:column="25"/></name></name> <operator pos:line="15" pos:column="26">=<pos:position pos:line="15" pos:column="27"/></operator> <name pos:line="15" pos:column="28">distance_from_std<pos:position pos:line="15" pos:column="45"/></name></expr>;<pos:position pos:line="15" pos:column="46"/></expr_stmt>

  <comment type="line" pos:line="17" pos:column="3">// color</comment>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">colorid_t<pos:position pos:line="18" pos:column="12"/></name></type> <name pos:line="18" pos:column="13">cid<pos:position pos:line="18" pos:column="16"/></name> <init pos:line="18" pos:column="17">= <expr><call><name pos:line="18" pos:column="19">ev3_color_sensor_get_color<pos:position pos:line="18" pos:column="45"/></name><argument_list pos:line="18" pos:column="45">(<argument><expr><name pos:line="18" pos:column="46">color_sensor<pos:position pos:line="18" pos:column="58"/></name></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="60"/></decl_stmt>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">g_in<pos:position pos:line="19" pos:column="7"/></name><operator pos:line="19" pos:column="7">.<pos:position pos:line="19" pos:column="8"/></operator><name pos:line="19" pos:column="8">color<pos:position pos:line="19" pos:column="13"/></name></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <name pos:line="19" pos:column="16">cid<pos:position pos:line="19" pos:column="19"/></name></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function>
</unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C" filename="jamss-app2/actuator.c" pos:tabs="8" hash="0f07031115c8d503e1a59a5ec2dfa8739a99c28c"><cpp:include pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">include<pos:position pos:line="1" pos:column="9"/></cpp:directive> <cpp:file pos:line="1" pos:column="10">"actuator.h"<pos:position pos:line="1" pos:column="22"/></cpp:file></cpp:include>
<cpp:include pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">include<pos:position pos:line="2" pos:column="9"/></cpp:directive> <cpp:file pos:line="2" pos:column="10">"global.h"<pos:position pos:line="2" pos:column="20"/></cpp:file></cpp:include>

<function><type><name pos:line="4" pos:column="1">void<pos:position pos:line="4" pos:column="5"/></name></type> <name pos:line="4" pos:column="6">sensor_motor_rotate<pos:position pos:line="4" pos:column="25"/></name><parameter_list pos:line="4" pos:column="25">(<parameter><decl><type><name pos:line="4" pos:column="26">int<pos:position pos:line="4" pos:column="29"/></name></type> <name pos:line="4" pos:column="30">speed<pos:position pos:line="4" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="36"/></parameter_list><block pos:line="4" pos:column="36">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">sensor_motor_deg<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><call><name pos:line="5" pos:column="26">ev3_motor_get_counts<pos:position pos:line="5" pos:column="46"/></name><argument_list pos:line="5" pos:column="46">(<argument><expr><name pos:line="5" pos:column="47">sensor_motor<pos:position pos:line="5" pos:column="59"/></name></expr></argument>)<pos:position pos:line="5" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="61"/></decl_stmt>
  <comment type="line" pos:line="6" pos:column="3">// if (SENSOR_MAX_DEG - abs(sensor_motor_deg) &lt; 2){</comment>
  <comment type="line" pos:line="7" pos:column="3">//   ev3_motor_rotate(sensor_motor,</comment>
  <comment type="line" pos:line="8" pos:column="3">//       sensor_motor_deg &gt; 0 ? - SENSOR_MAX_DEG : SENSOR_MAX_DEG,</comment>
  <comment type="line" pos:line="9" pos:column="3">//       SENSOR_SPEED, false);</comment>
  <comment type="line" pos:line="10" pos:column="3">// }</comment>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">SENSOR_MAX_DEG<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">-<pos:position pos:line="11" pos:column="23"/></operator> <name pos:line="11" pos:column="24">g_sensor_direction<pos:position pos:line="11" pos:column="42"/></name> <operator pos:line="11" pos:column="43">*<pos:position pos:line="11" pos:column="44"/></operator> <name pos:line="11" pos:column="45">sensor_motor_deg<pos:position pos:line="11" pos:column="61"/></name> <operator pos:line="11" pos:column="62">&lt;<pos:position pos:line="11" pos:column="66"/></operator> <literal type="number" pos:line="11" pos:column="64">2<pos:position pos:line="11" pos:column="65"/></literal></expr>)<pos:position pos:line="11" pos:column="66"/></condition><then pos:line="11" pos:column="66"> <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="67">g_sensor_direction<pos:position pos:line="11" pos:column="85"/></name> <operator pos:line="11" pos:column="86">*=<pos:position pos:line="11" pos:column="88"/></operator> <operator pos:line="11" pos:column="89">-<pos:position pos:line="11" pos:column="90"/></operator><literal type="number" pos:line="11" pos:column="90">1<pos:position pos:line="11" pos:column="91"/></literal></expr>;<pos:position pos:line="11" pos:column="92"/></expr_stmt></block></then></if>
  <comment type="line" pos:line="12" pos:column="3">//ev3_motor_rotate(sensor_motor, g_sensor_direction * SENSOR_MAX_DEG, SENSOR_SPEED, false);</comment>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">ev3_motor_set_power<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">sensor_motor<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="37">g_sensor_direction<pos:position pos:line="13" pos:column="55"/></name> <operator pos:line="13" pos:column="56">*<pos:position pos:line="13" pos:column="57"/></operator> <name pos:line="13" pos:column="58">speed<pos:position pos:line="13" pos:column="63"/></name></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="65"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function>

<function><type><name pos:line="16" pos:column="1">void<pos:position pos:line="16" pos:column="5"/></name></type> <name pos:line="16" pos:column="6">motor_run<pos:position pos:line="16" pos:column="15"/></name><parameter_list pos:line="16" pos:column="15">()<pos:position pos:line="16" pos:column="17"/></parameter_list><block pos:line="16" pos:column="17">{
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">sensor_motor_rotate<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name><name pos:line="17" pos:column="23">g_out<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">.<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="29">speed_sensor<pos:position pos:line="17" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">ev3_motor_set_power<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><name pos:line="18" pos:column="23">left_motor<pos:position pos:line="18" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="35">g_out<pos:position pos:line="18" pos:column="40"/></name><operator pos:line="18" pos:column="40">.<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="41">speed_l<pos:position pos:line="18" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">ev3_motor_set_power<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">right_motor<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="36">g_out<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">.<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="42">speed_r<pos:position pos:line="19" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="51"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function>

<function><type><name pos:line="22" pos:column="1">void<pos:position pos:line="22" pos:column="5"/></name></type> <name pos:line="22" pos:column="6">lcd_show<pos:position pos:line="22" pos:column="14"/></name><parameter_list pos:line="22" pos:column="14">(<parameter><decl><type><name pos:line="22" pos:column="15">int<pos:position pos:line="22" pos:column="18"/></name></type> <name pos:line="22" pos:column="19">clk_count<pos:position pos:line="22" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="22" pos:column="29"/></parameter_list><block pos:line="22" pos:column="29">{
  <decl_stmt><decl><type><name pos:line="23" pos:column="3">char<pos:position pos:line="23" pos:column="7"/></name></type> <name><name pos:line="23" pos:column="8">lcd_str_buf<pos:position pos:line="23" pos:column="19"/></name><index pos:line="23" pos:column="19">[<expr><literal type="number" pos:line="23" pos:column="20">100<pos:position pos:line="23" pos:column="23"/></literal></expr>]<pos:position pos:line="23" pos:column="24"/></index></name></decl>;<pos:position pos:line="23" pos:column="25"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">ev3_lcd_draw_string<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><literal type="string" pos:line="24" pos:column="23">"DISTANCE:"<pos:position pos:line="24" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="36">0<pos:position pos:line="24" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="39">20<pos:position pos:line="24" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">snprintf<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name pos:line="25" pos:column="12">lcd_str_buf<pos:position pos:line="25" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="25">100<pos:position pos:line="25" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="30">"%03d"<pos:position pos:line="25" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="38">g_in<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">.<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="43">distance<pos:position pos:line="25" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">ev3_lcd_draw_string<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">(<argument><expr><name pos:line="26" pos:column="23">lcd_str_buf<pos:position pos:line="26" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="36">clk_count<pos:position pos:line="26" pos:column="45"/></name> <operator pos:line="26" pos:column="46">*<pos:position pos:line="26" pos:column="47"/></operator> <literal type="number" pos:line="26" pos:column="48">35<pos:position pos:line="26" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="52">40<pos:position pos:line="26" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">ev3_lcd_draw_string<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">(<argument><expr><literal type="string" pos:line="27" pos:column="23">"DIFF TO STD:"<pos:position pos:line="27" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="39">0<pos:position pos:line="27" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="42">60<pos:position pos:line="27" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">snprintf<pos:position pos:line="28" pos:column="11"/></name><argument_list pos:line="28" pos:column="11">(<argument><expr><name pos:line="28" pos:column="12">lcd_str_buf<pos:position pos:line="28" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="25">100<pos:position pos:line="28" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="30">"%03d"<pos:position pos:line="28" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="38">g_in<pos:position pos:line="28" pos:column="42"/></name><operator pos:line="28" pos:column="42">.<pos:position pos:line="28" pos:column="43"/></operator><name pos:line="28" pos:column="43">distance_from_std<pos:position pos:line="28" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">ev3_lcd_draw_string<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">lcd_str_buf<pos:position pos:line="29" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="36">clk_count<pos:position pos:line="29" pos:column="45"/></name> <operator pos:line="29" pos:column="46">*<pos:position pos:line="29" pos:column="47"/></operator> <literal type="number" pos:line="29" pos:column="48">35<pos:position pos:line="29" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="52">80<pos:position pos:line="29" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="56"/></expr_stmt>
}<pos:position pos:line="30" pos:column="2"/></block></function>
</unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C" filename="jamss-app2/control.c" pos:tabs="8" hash="05726d0e1ed54025a15d8f9fc4aca44c5f04b49e"><cpp:include pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">include<pos:position pos:line="1" pos:column="9"/></cpp:directive> <cpp:file pos:line="1" pos:column="10">"control.h"<pos:position pos:line="1" pos:column="21"/></cpp:file></cpp:include>
<cpp:include pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">include<pos:position pos:line="2" pos:column="9"/></cpp:directive> <cpp:file pos:line="2" pos:column="10">"global.h"<pos:position pos:line="2" pos:column="20"/></cpp:file></cpp:include>
<cpp:include pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">include<pos:position pos:line="3" pos:column="9"/></cpp:directive> <cpp:file pos:line="3" pos:column="10">"sound.h"<pos:position pos:line="3" pos:column="19"/></cpp:file></cpp:include>

<decl_stmt><decl><type><specifier pos:line="5" pos:column="1">const<pos:position pos:line="5" pos:column="6"/></specifier> <name pos:line="5" pos:column="7">int<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">SENSOR_CALIB_COUNT<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><literal type="number" pos:line="5" pos:column="32">1000<pos:position pos:line="5" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="6" pos:column="1">const<pos:position pos:line="6" pos:column="6"/></specifier> <name pos:line="6" pos:column="7">int<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">SENSOR_SPEED<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><literal type="number" pos:line="6" pos:column="26">12<pos:position pos:line="6" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="7" pos:column="1">const<pos:position pos:line="7" pos:column="6"/></specifier> <name pos:line="7" pos:column="7">int<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">MAX_STEP_BACK_COUNT<pos:position pos:line="7" pos:column="30"/></name> <init pos:line="7" pos:column="31">= <expr><literal type="number" pos:line="7" pos:column="33">1000<pos:position pos:line="7" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="8" pos:column="1">const<pos:position pos:line="8" pos:column="6"/></specifier> <name pos:line="8" pos:column="7">int<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">MOTOR_SPEED<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><literal type="number" pos:line="8" pos:column="25">5<pos:position pos:line="8" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="9" pos:column="1">const<pos:position pos:line="9" pos:column="6"/></specifier> <name pos:line="9" pos:column="7">int<pos:position pos:line="9" pos:column="10"/></name></type> <name pos:line="9" pos:column="11">MOTOR_ROTATE_SPEED<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><literal type="number" pos:line="9" pos:column="32">5<pos:position pos:line="9" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="10" pos:column="1">const<pos:position pos:line="10" pos:column="6"/></specifier> <name pos:line="10" pos:column="7">int<pos:position pos:line="10" pos:column="10"/></name></type> <name pos:line="10" pos:column="11">SENSOR_DISTANCE_BORDER<pos:position pos:line="10" pos:column="33"/></name> <init pos:line="10" pos:column="34">= <expr><literal type="number" pos:line="10" pos:column="36">8<pos:position pos:line="10" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="38"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="11" pos:column="1">const<pos:position pos:line="11" pos:column="6"/></specifier> <name pos:line="11" pos:column="7">int<pos:position pos:line="11" pos:column="10"/></name></type> <name pos:line="11" pos:column="11">NORMAL_KEEP_COUNT<pos:position pos:line="11" pos:column="28"/></name> <init pos:line="11" pos:column="29">= <expr><literal type="number" pos:line="11" pos:column="31">5<pos:position pos:line="11" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="33"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="12" pos:column="1">const<pos:position pos:line="12" pos:column="6"/></specifier> <name pos:line="12" pos:column="7">int<pos:position pos:line="12" pos:column="10"/></name></type> <name pos:line="12" pos:column="11">ROTATE_COUNT<pos:position pos:line="12" pos:column="23"/></name> <init pos:line="12" pos:column="24">= <expr><literal type="number" pos:line="12" pos:column="26">700<pos:position pos:line="12" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="30"/></decl_stmt>

<function_decl><type><name pos:line="14" pos:column="1">void<pos:position pos:line="14" pos:column="5"/></name></type> <name pos:line="14" pos:column="6">motor_control<pos:position pos:line="14" pos:column="19"/></name><parameter_list pos:line="14" pos:column="19">()<pos:position pos:line="14" pos:column="21"/></parameter_list>;<pos:position pos:line="14" pos:column="22"/></function_decl>
<function_decl><type><name pos:line="15" pos:column="1">void<pos:position pos:line="15" pos:column="5"/></name></type> <name pos:line="15" pos:column="6">sensor_control<pos:position pos:line="15" pos:column="20"/></name><parameter_list pos:line="15" pos:column="20">()<pos:position pos:line="15" pos:column="22"/></parameter_list>;<pos:position pos:line="15" pos:column="23"/></function_decl>

<function><type><name pos:line="17" pos:column="1">void<pos:position pos:line="17" pos:column="5"/></name></type> <name pos:line="17" pos:column="6">control_main<pos:position pos:line="17" pos:column="18"/></name><parameter_list pos:line="17" pos:column="18">()<pos:position pos:line="17" pos:column="20"/></parameter_list><block pos:line="17" pos:column="20">{
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">motor_control<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">()<pos:position pos:line="18" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">sensor_control<pos:position pos:line="19" pos:column="17"/></name><argument_list pos:line="19" pos:column="17">()<pos:position pos:line="19" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function>

<function><type><name pos:line="22" pos:column="1">void<pos:position pos:line="22" pos:column="5"/></name></type> <name pos:line="22" pos:column="6">motor_control<pos:position pos:line="22" pos:column="19"/></name><parameter_list pos:line="22" pos:column="19">()<pos:position pos:line="22" pos:column="21"/></parameter_list><block pos:line="22" pos:column="21">{
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">g_out<pos:position pos:line="23" pos:column="8"/></name><operator pos:line="23" pos:column="8">.<pos:position pos:line="23" pos:column="9"/></operator><name pos:line="23" pos:column="9">speed_sensor<pos:position pos:line="23" pos:column="21"/></name></name> <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <name pos:line="23" pos:column="24">SENSOR_SPEED<pos:position pos:line="23" pos:column="36"/></name></expr>;<pos:position pos:line="23" pos:column="37"/></expr_stmt>
  <switch pos:line="24" pos:column="3">switch <condition pos:line="24" pos:column="10">(<expr><name pos:line="24" pos:column="11">g_status<pos:position pos:line="24" pos:column="19"/></name></expr>)<pos:position pos:line="24" pos:column="20"/></condition><block pos:line="24" pos:column="20">{
  <case pos:line="25" pos:column="3">case <expr><name pos:line="25" pos:column="8">s2_ready<pos:position pos:line="25" pos:column="16"/></name></expr>:<pos:position pos:line="25" pos:column="17"/></case>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">g_out<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">.<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="11">speed_l<pos:position pos:line="26" pos:column="18"/></name></name> <operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator> <name><name pos:line="26" pos:column="21">g_out<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">.<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="27">speed_r<pos:position pos:line="26" pos:column="34"/></name></name> <operator pos:line="26" pos:column="35">=<pos:position pos:line="26" pos:column="36"/></operator> <literal type="number" pos:line="26" pos:column="37">0<pos:position pos:line="26" pos:column="38"/></literal></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">g_out<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">.<pos:position pos:line="27" pos:column="11"/></operator><name pos:line="27" pos:column="11">speed_sensor<pos:position pos:line="27" pos:column="23"/></name></name> <operator pos:line="27" pos:column="24">=<pos:position pos:line="27" pos:column="25"/></operator> <literal type="number" pos:line="27" pos:column="26">20<pos:position pos:line="27" pos:column="28"/></literal></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt>
    <break pos:line="28" pos:column="5">break;<pos:position pos:line="28" pos:column="11"/></break>

  <case pos:line="30" pos:column="3">case <expr><name pos:line="30" pos:column="8">s2_normal<pos:position pos:line="30" pos:column="17"/></name></expr>:<pos:position pos:line="30" pos:column="18"/></case>
    <comment type="line" pos:line="31" pos:column="5">// Count step back count</comment>
    <expr_stmt><expr><name pos:line="32" pos:column="5">g_step_back_count<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">++<pos:position pos:line="32" pos:column="24"/></operator></expr>;<pos:position pos:line="32" pos:column="25"/></expr_stmt>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">g_step_back_count<pos:position pos:line="33" pos:column="26"/></name> <operator pos:line="33" pos:column="27">&gt;<pos:position pos:line="33" pos:column="31"/></operator> <name pos:line="33" pos:column="29">MAX_STEP_BACK_COUNT<pos:position pos:line="33" pos:column="48"/></name></expr>)<pos:position pos:line="33" pos:column="49"/></condition><then pos:line="33" pos:column="49"> <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="50">g_step_back_count<pos:position pos:line="33" pos:column="67"/></name> <operator pos:line="33" pos:column="68">=<pos:position pos:line="33" pos:column="69"/></operator> <name pos:line="33" pos:column="70">MAX_STEP_BACK_COUNT<pos:position pos:line="33" pos:column="89"/></name></expr>;<pos:position pos:line="33" pos:column="90"/></expr_stmt></block></then></if>

    <comment type="line" pos:line="35" pos:column="5">// Calcurate motor speed</comment>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">g_out<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">.<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="11">speed_l<pos:position pos:line="36" pos:column="18"/></name></name> <operator pos:line="36" pos:column="19">=<pos:position pos:line="36" pos:column="20"/></operator> <name><name pos:line="36" pos:column="21">g_out<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">.<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="27">speed_r<pos:position pos:line="36" pos:column="34"/></name></name> <operator pos:line="36" pos:column="35">=<pos:position pos:line="36" pos:column="36"/></operator> <name pos:line="36" pos:column="37">MOTOR_SPEED<pos:position pos:line="36" pos:column="48"/></name></expr>;<pos:position pos:line="36" pos:column="49"/></expr_stmt>

    <comment type="line" pos:line="38" pos:column="5">// Border Check!</comment>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name><name pos:line="39" pos:column="9">g_in<pos:position pos:line="39" pos:column="13"/></name><operator pos:line="39" pos:column="13">.<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="14">distance_from_std<pos:position pos:line="39" pos:column="31"/></name></name> <operator pos:line="39" pos:column="32">&gt;<pos:position pos:line="39" pos:column="36"/></operator> <name pos:line="39" pos:column="34">SENSOR_DISTANCE_BORDER<pos:position pos:line="39" pos:column="56"/></name> <operator pos:line="39" pos:column="57">&amp;&amp;<pos:position pos:line="39" pos:column="67"/></operator>
        <name><name pos:line="40" pos:column="9">g_in<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">.<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">distance<pos:position pos:line="40" pos:column="22"/></name></name> <operator pos:line="40" pos:column="23">&lt;<pos:position pos:line="40" pos:column="27"/></operator> <literal type="number" pos:line="40" pos:column="25">150<pos:position pos:line="40" pos:column="28"/></literal> <operator pos:line="40" pos:column="29">&amp;&amp;<pos:position pos:line="40" pos:column="39"/></operator>
        <name><name pos:line="41" pos:column="9">g_in<pos:position pos:line="41" pos:column="13"/></name><operator pos:line="41" pos:column="13">.<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">distance<pos:position pos:line="41" pos:column="22"/></name></name> <operator pos:line="41" pos:column="23">&gt;<pos:position pos:line="41" pos:column="27"/></operator> <literal type="number" pos:line="41" pos:column="25">2<pos:position pos:line="41" pos:column="26"/></literal></expr> )<pos:position pos:line="41" pos:column="28"/></condition><then><block pos:line="41" pos:column="28">{
      <expr_stmt><expr><name><name pos:line="42" pos:column="7">g_out<pos:position pos:line="42" pos:column="12"/></name><operator pos:line="42" pos:column="12">.<pos:position pos:line="42" pos:column="13"/></operator><name pos:line="42" pos:column="13">speed_l<pos:position pos:line="42" pos:column="20"/></name></name> <operator pos:line="42" pos:column="21">=<pos:position pos:line="42" pos:column="22"/></operator> <name><name pos:line="42" pos:column="23">g_out<pos:position pos:line="42" pos:column="28"/></name><operator pos:line="42" pos:column="28">.<pos:position pos:line="42" pos:column="29"/></operator><name pos:line="42" pos:column="29">speed_r<pos:position pos:line="42" pos:column="36"/></name></name> <operator pos:line="42" pos:column="37">=<pos:position pos:line="42" pos:column="38"/></operator> <literal type="number" pos:line="42" pos:column="39">1<pos:position pos:line="42" pos:column="40"/></literal></expr>;<pos:position pos:line="42" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="43" pos:column="7">g_out<pos:position pos:line="43" pos:column="12"/></name><operator pos:line="43" pos:column="12">.<pos:position pos:line="43" pos:column="13"/></operator><name pos:line="43" pos:column="13">speed_sensor<pos:position pos:line="43" pos:column="25"/></name></name> <operator pos:line="43" pos:column="26">=<pos:position pos:line="43" pos:column="27"/></operator> <literal type="number" pos:line="43" pos:column="28">1<pos:position pos:line="43" pos:column="29"/></literal></expr>;<pos:position pos:line="43" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name pos:line="44" pos:column="7">g_normal_out_count<pos:position pos:line="44" pos:column="25"/></name><operator pos:line="44" pos:column="25">++<pos:position pos:line="44" pos:column="27"/></operator></expr>;<pos:position pos:line="44" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">ev3_speaker_play_tone<pos:position pos:line="45" pos:column="28"/></name><argument_list pos:line="45" pos:column="28">(<argument><expr><name pos:line="45" pos:column="29">NOTE_G5<pos:position pos:line="45" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="38">100<pos:position pos:line="45" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">tslp_tsk<pos:position pos:line="46" pos:column="15"/></name><argument_list pos:line="46" pos:column="15">(<argument><expr><literal type="number" pos:line="46" pos:column="16">100<pos:position pos:line="46" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="47" pos:column="7">ev3_speaker_play_tone<pos:position pos:line="47" pos:column="28"/></name><argument_list pos:line="47" pos:column="28">(<argument><expr><name pos:line="47" pos:column="29">NOTE_C5<pos:position pos:line="47" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="38">100<pos:position pos:line="47" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="43"/></expr_stmt>
      <if pos:line="48" pos:column="7">if <condition pos:line="48" pos:column="10">(<expr><name pos:line="48" pos:column="11">g_normal_out_count<pos:position pos:line="48" pos:column="29"/></name> <operator pos:line="48" pos:column="30">&gt;<pos:position pos:line="48" pos:column="34"/></operator> <name pos:line="48" pos:column="32">NORMAL_KEEP_COUNT<pos:position pos:line="48" pos:column="49"/></name></expr>)<pos:position pos:line="48" pos:column="50"/></condition><then pos:line="48" pos:column="50"> <block pos:line="48" pos:column="51">{
        <expr_stmt><expr><name pos:line="49" pos:column="9">g_status<pos:position pos:line="49" pos:column="17"/></name> <operator pos:line="49" pos:column="18">=<pos:position pos:line="49" pos:column="19"/></operator> <name pos:line="49" pos:column="20">s2_back<pos:position pos:line="49" pos:column="27"/></name></expr>;<pos:position pos:line="49" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="50" pos:column="9">g_out<pos:position pos:line="50" pos:column="14"/></name><operator pos:line="50" pos:column="14">.<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="15">speed_l<pos:position pos:line="50" pos:column="22"/></name></name> <operator pos:line="50" pos:column="23">=<pos:position pos:line="50" pos:column="24"/></operator> <name><name pos:line="50" pos:column="25">g_out<pos:position pos:line="50" pos:column="30"/></name><operator pos:line="50" pos:column="30">.<pos:position pos:line="50" pos:column="31"/></operator><name pos:line="50" pos:column="31">speed_r<pos:position pos:line="50" pos:column="38"/></name></name> <operator pos:line="50" pos:column="39">=<pos:position pos:line="50" pos:column="40"/></operator> <literal type="number" pos:line="50" pos:column="41">0<pos:position pos:line="50" pos:column="42"/></literal></expr>;<pos:position pos:line="50" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name pos:line="51" pos:column="9">g_normal_out_count<pos:position pos:line="51" pos:column="27"/></name> <operator pos:line="51" pos:column="28">=<pos:position pos:line="51" pos:column="29"/></operator> <literal type="number" pos:line="51" pos:column="30">0<pos:position pos:line="51" pos:column="31"/></literal></expr>;<pos:position pos:line="51" pos:column="32"/></expr_stmt>
      }<pos:position pos:line="52" pos:column="8"/></block></then></if>
    }<pos:position pos:line="53" pos:column="6"/></block></then> <else pos:line="53" pos:column="7">else <block pos:line="53" pos:column="12">{
      <expr_stmt><expr><name pos:line="54" pos:column="7">g_normal_out_count<pos:position pos:line="54" pos:column="25"/></name> <operator pos:line="54" pos:column="26">=<pos:position pos:line="54" pos:column="27"/></operator> <literal type="number" pos:line="54" pos:column="28">0<pos:position pos:line="54" pos:column="29"/></literal></expr>;<pos:position pos:line="54" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></else></if>
    <break pos:line="56" pos:column="5">break;<pos:position pos:line="56" pos:column="11"/></break>

  <case pos:line="58" pos:column="3">case <expr><name pos:line="58" pos:column="8">s2_back<pos:position pos:line="58" pos:column="15"/></name></expr>:<pos:position pos:line="58" pos:column="16"/></case>
    <expr_stmt><expr><name><name pos:line="59" pos:column="5">g_out<pos:position pos:line="59" pos:column="10"/></name><operator pos:line="59" pos:column="10">.<pos:position pos:line="59" pos:column="11"/></operator><name pos:line="59" pos:column="11">speed_l<pos:position pos:line="59" pos:column="18"/></name></name> <operator pos:line="59" pos:column="19">=<pos:position pos:line="59" pos:column="20"/></operator> <name><name pos:line="59" pos:column="21">g_out<pos:position pos:line="59" pos:column="26"/></name><operator pos:line="59" pos:column="26">.<pos:position pos:line="59" pos:column="27"/></operator><name pos:line="59" pos:column="27">speed_r<pos:position pos:line="59" pos:column="34"/></name></name> <operator pos:line="59" pos:column="35">=<pos:position pos:line="59" pos:column="36"/></operator> <operator pos:line="59" pos:column="37">-<pos:position pos:line="59" pos:column="38"/></operator><name pos:line="59" pos:column="38">MOTOR_SPEED<pos:position pos:line="59" pos:column="49"/></name></expr>;<pos:position pos:line="59" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name pos:line="60" pos:column="5">g_step_back_count<pos:position pos:line="60" pos:column="22"/></name><operator pos:line="60" pos:column="22">--<pos:position pos:line="60" pos:column="24"/></operator></expr>;<pos:position pos:line="60" pos:column="25"/></expr_stmt>
    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><name pos:line="61" pos:column="9">g_step_back_count<pos:position pos:line="61" pos:column="26"/></name> <operator pos:line="61" pos:column="27">&lt;=<pos:position pos:line="61" pos:column="32"/></operator> <literal type="number" pos:line="61" pos:column="30">0<pos:position pos:line="61" pos:column="31"/></literal></expr>)<pos:position pos:line="61" pos:column="32"/></condition><then><block pos:line="61" pos:column="32">{
      <expr_stmt><expr><name pos:line="62" pos:column="7">g_step_back_count<pos:position pos:line="62" pos:column="24"/></name> <operator pos:line="62" pos:column="25">=<pos:position pos:line="62" pos:column="26"/></operator> <literal type="number" pos:line="62" pos:column="27">0<pos:position pos:line="62" pos:column="28"/></literal></expr>;<pos:position pos:line="62" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name pos:line="63" pos:column="7">g_status<pos:position pos:line="63" pos:column="15"/></name> <operator pos:line="63" pos:column="16">=<pos:position pos:line="63" pos:column="17"/></operator> <name pos:line="63" pos:column="18">s2_rotate<pos:position pos:line="63" pos:column="27"/></name></expr>;<pos:position pos:line="63" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>
    <break pos:line="65" pos:column="5">break;<pos:position pos:line="65" pos:column="11"/></break>

  <case pos:line="67" pos:column="3">case <expr><name pos:line="67" pos:column="8">s2_rotate<pos:position pos:line="67" pos:column="17"/></name></expr>:<pos:position pos:line="67" pos:column="18"/></case>
    <expr_stmt><expr><name><name pos:line="68" pos:column="5">g_out<pos:position pos:line="68" pos:column="10"/></name><operator pos:line="68" pos:column="10">.<pos:position pos:line="68" pos:column="11"/></operator><name pos:line="68" pos:column="11">speed_l<pos:position pos:line="68" pos:column="18"/></name></name> <operator pos:line="68" pos:column="19">=<pos:position pos:line="68" pos:column="20"/></operator> <name pos:line="68" pos:column="21">MOTOR_ROTATE_SPEED<pos:position pos:line="68" pos:column="39"/></name></expr>;<pos:position pos:line="68" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="69" pos:column="5">g_out<pos:position pos:line="69" pos:column="10"/></name><operator pos:line="69" pos:column="10">.<pos:position pos:line="69" pos:column="11"/></operator><name pos:line="69" pos:column="11">speed_r<pos:position pos:line="69" pos:column="18"/></name></name> <operator pos:line="69" pos:column="19">=<pos:position pos:line="69" pos:column="20"/></operator> <operator pos:line="69" pos:column="21">-<pos:position pos:line="69" pos:column="22"/></operator><name pos:line="69" pos:column="22">MOTOR_ROTATE_SPEED<pos:position pos:line="69" pos:column="40"/></name></expr>;<pos:position pos:line="69" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name pos:line="70" pos:column="5">g_step_back_count<pos:position pos:line="70" pos:column="22"/></name><operator pos:line="70" pos:column="22">++<pos:position pos:line="70" pos:column="24"/></operator></expr>;<pos:position pos:line="70" pos:column="25"/></expr_stmt>
    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><name pos:line="71" pos:column="9">g_step_back_count<pos:position pos:line="71" pos:column="26"/></name> <operator pos:line="71" pos:column="27">&gt;<pos:position pos:line="71" pos:column="31"/></operator> <name pos:line="71" pos:column="29">ROTATE_COUNT<pos:position pos:line="71" pos:column="41"/></name></expr>)<pos:position pos:line="71" pos:column="42"/></condition><then><block pos:line="71" pos:column="42">{
      <expr_stmt><expr><name pos:line="72" pos:column="7">g_step_back_count<pos:position pos:line="72" pos:column="24"/></name> <operator pos:line="72" pos:column="25">=<pos:position pos:line="72" pos:column="26"/></operator> <literal type="number" pos:line="72" pos:column="27">0<pos:position pos:line="72" pos:column="28"/></literal></expr>;<pos:position pos:line="72" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name pos:line="73" pos:column="7">g_status<pos:position pos:line="73" pos:column="15"/></name> <operator pos:line="73" pos:column="16">=<pos:position pos:line="73" pos:column="17"/></operator> <name pos:line="73" pos:column="18">s2_rotate_after<pos:position pos:line="73" pos:column="33"/></name></expr>;<pos:position pos:line="73" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if>
    <break pos:line="75" pos:column="5">break;<pos:position pos:line="75" pos:column="11"/></break>

  <case pos:line="77" pos:column="3">case <expr><name pos:line="77" pos:column="8">s2_rotate_after<pos:position pos:line="77" pos:column="23"/></name></expr>:<pos:position pos:line="77" pos:column="24"/></case>
    <expr_stmt><expr><name><name pos:line="78" pos:column="5">g_out<pos:position pos:line="78" pos:column="10"/></name><operator pos:line="78" pos:column="10">.<pos:position pos:line="78" pos:column="11"/></operator><name pos:line="78" pos:column="11">speed_l<pos:position pos:line="78" pos:column="18"/></name></name> <operator pos:line="78" pos:column="19">=<pos:position pos:line="78" pos:column="20"/></operator> <name><name pos:line="78" pos:column="21">g_out<pos:position pos:line="78" pos:column="26"/></name><operator pos:line="78" pos:column="26">.<pos:position pos:line="78" pos:column="27"/></operator><name pos:line="78" pos:column="27">speed_r<pos:position pos:line="78" pos:column="34"/></name></name> <operator pos:line="78" pos:column="35">=<pos:position pos:line="78" pos:column="36"/></operator> <literal type="number" pos:line="78" pos:column="37">0<pos:position pos:line="78" pos:column="38"/></literal></expr>;<pos:position pos:line="78" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="79" pos:column="5">g_step_back_count<pos:position pos:line="79" pos:column="22"/></name><operator pos:line="79" pos:column="22">++<pos:position pos:line="79" pos:column="24"/></operator></expr>;<pos:position pos:line="79" pos:column="25"/></expr_stmt>
    <if pos:line="80" pos:column="5">if <condition pos:line="80" pos:column="8">(<expr><name pos:line="80" pos:column="9">g_step_back_count<pos:position pos:line="80" pos:column="26"/></name> <operator pos:line="80" pos:column="27">&gt;<pos:position pos:line="80" pos:column="31"/></operator> <name pos:line="80" pos:column="29">ROTATE_COUNT<pos:position pos:line="80" pos:column="41"/></name></expr>)<pos:position pos:line="80" pos:column="42"/></condition><then><block pos:line="80" pos:column="42">{
      <expr_stmt><expr><name pos:line="81" pos:column="7">g_step_back_count<pos:position pos:line="81" pos:column="24"/></name> <operator pos:line="81" pos:column="25">=<pos:position pos:line="81" pos:column="26"/></operator> <literal type="number" pos:line="81" pos:column="27">0<pos:position pos:line="81" pos:column="28"/></literal></expr>;<pos:position pos:line="81" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name pos:line="82" pos:column="7">g_status<pos:position pos:line="82" pos:column="15"/></name> <operator pos:line="82" pos:column="16">=<pos:position pos:line="82" pos:column="17"/></operator> <name pos:line="82" pos:column="18">s2_normal<pos:position pos:line="82" pos:column="27"/></name></expr>;<pos:position pos:line="82" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="83" pos:column="6"/></block></then></if>
    <break pos:line="84" pos:column="5">break;<pos:position pos:line="84" pos:column="11"/></break>
  }<pos:position pos:line="85" pos:column="4"/></block></switch>
}<pos:position pos:line="86" pos:column="2"/></block></function>

<function><type><name pos:line="88" pos:column="1">void<pos:position pos:line="88" pos:column="5"/></name></type> <name pos:line="88" pos:column="6">sensor_control<pos:position pos:line="88" pos:column="20"/></name><parameter_list pos:line="88" pos:column="20">()<pos:position pos:line="88" pos:column="22"/></parameter_list> <block pos:line="88" pos:column="23">{
  <comment type="line" pos:line="89" pos:column="3">// Color sensor control</comment>
  <if pos:line="90" pos:column="3">if <condition pos:line="90" pos:column="6">(<expr><name><name pos:line="90" pos:column="7">g_in<pos:position pos:line="90" pos:column="11"/></name><operator pos:line="90" pos:column="11">.<pos:position pos:line="90" pos:column="12"/></operator><name pos:line="90" pos:column="12">color<pos:position pos:line="90" pos:column="17"/></name></name> <operator pos:line="90" pos:column="18">==<pos:position pos:line="90" pos:column="20"/></operator> <name pos:line="90" pos:column="21">COLOR_RED<pos:position pos:line="90" pos:column="30"/></name></expr>)<pos:position pos:line="90" pos:column="31"/></condition><then pos:line="90" pos:column="31"> <block pos:line="90" pos:column="32">{
    <comment type="line" pos:line="91" pos:column="5">// notify goal!!</comment>
    <if pos:line="92" pos:column="5">if <condition pos:line="92" pos:column="8">(<expr><name pos:line="92" pos:column="9">g_status<pos:position pos:line="92" pos:column="17"/></name> <operator pos:line="92" pos:column="18">!=<pos:position pos:line="92" pos:column="20"/></operator> <name pos:line="92" pos:column="21">s2_ready<pos:position pos:line="92" pos:column="29"/></name></expr>)<pos:position pos:line="92" pos:column="30"/></condition><then pos:line="92" pos:column="30"> <block pos:line="92" pos:column="31">{
      <expr_stmt><expr><call><name pos:line="93" pos:column="7">play_goal_sound<pos:position pos:line="93" pos:column="22"/></name><argument_list pos:line="93" pos:column="22">()<pos:position pos:line="93" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="96" pos:column="5">// go to ready state</comment>
    <expr_stmt><expr><name pos:line="97" pos:column="5">g_status<pos:position pos:line="97" pos:column="13"/></name> <operator pos:line="97" pos:column="14">=<pos:position pos:line="97" pos:column="15"/></operator> <name pos:line="97" pos:column="16">s2_ready<pos:position pos:line="97" pos:column="24"/></name></expr>;<pos:position pos:line="97" pos:column="25"/></expr_stmt>
  }<pos:position pos:line="98" pos:column="4"/></block></then> <elseif pos:line="98" pos:column="5">else <if pos:line="98" pos:column="10">if <condition pos:line="98" pos:column="13">(<expr><name><name pos:line="98" pos:column="14">g_in<pos:position pos:line="98" pos:column="18"/></name><operator pos:line="98" pos:column="18">.<pos:position pos:line="98" pos:column="19"/></operator><name pos:line="98" pos:column="19">color<pos:position pos:line="98" pos:column="24"/></name></name> <operator pos:line="98" pos:column="25">==<pos:position pos:line="98" pos:column="27"/></operator> <name pos:line="98" pos:column="28">COLOR_BLUE<pos:position pos:line="98" pos:column="38"/></name> <operator pos:line="98" pos:column="39">||<pos:position pos:line="98" pos:column="41"/></operator>
    <name><name pos:line="99" pos:column="5">g_in<pos:position pos:line="99" pos:column="9"/></name><operator pos:line="99" pos:column="9">.<pos:position pos:line="99" pos:column="10"/></operator><name pos:line="99" pos:column="10">color<pos:position pos:line="99" pos:column="15"/></name></name> <operator pos:line="99" pos:column="16">==<pos:position pos:line="99" pos:column="18"/></operator> <name pos:line="99" pos:column="19">COLOR_GREEN<pos:position pos:line="99" pos:column="30"/></name> <operator pos:line="99" pos:column="31">||<pos:position pos:line="99" pos:column="33"/></operator>
    <name><name pos:line="100" pos:column="5">g_in<pos:position pos:line="100" pos:column="9"/></name><operator pos:line="100" pos:column="9">.<pos:position pos:line="100" pos:column="10"/></operator><name pos:line="100" pos:column="10">color<pos:position pos:line="100" pos:column="15"/></name></name> <operator pos:line="100" pos:column="16">==<pos:position pos:line="100" pos:column="18"/></operator> <name pos:line="100" pos:column="19">COLOR_YELLOW<pos:position pos:line="100" pos:column="31"/></name></expr>)<pos:position pos:line="100" pos:column="32"/></condition><then pos:line="100" pos:column="32"> <block pos:line="100" pos:column="33">{

    <comment type="line" pos:line="102" pos:column="5">// notify material find!</comment>
    <if pos:line="103" pos:column="5">if <condition pos:line="103" pos:column="8">(<expr><name pos:line="103" pos:column="9">g_prev_color<pos:position pos:line="103" pos:column="21"/></name> <operator pos:line="103" pos:column="22">!=<pos:position pos:line="103" pos:column="24"/></operator> <name><name pos:line="103" pos:column="25">g_in<pos:position pos:line="103" pos:column="29"/></name><operator pos:line="103" pos:column="29">.<pos:position pos:line="103" pos:column="30"/></operator><name pos:line="103" pos:column="30">color<pos:position pos:line="103" pos:column="35"/></name></name></expr>)<pos:position pos:line="103" pos:column="36"/></condition><then pos:line="103" pos:column="36"> <block pos:line="103" pos:column="37">{
      <expr_stmt><expr><call><name pos:line="104" pos:column="7">play_material_sound<pos:position pos:line="104" pos:column="26"/></name><argument_list pos:line="104" pos:column="26">()<pos:position pos:line="104" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="105" pos:column="6"/></block></then></if>
  }<pos:position pos:line="106" pos:column="4"/></block></then></if></elseif></if>
  <expr_stmt><expr><name pos:line="107" pos:column="3">g_prev_color<pos:position pos:line="107" pos:column="15"/></name> <operator pos:line="107" pos:column="16">=<pos:position pos:line="107" pos:column="17"/></operator> <name><name pos:line="107" pos:column="18">g_in<pos:position pos:line="107" pos:column="22"/></name><operator pos:line="107" pos:column="22">.<pos:position pos:line="107" pos:column="23"/></operator><name pos:line="107" pos:column="23">color<pos:position pos:line="107" pos:column="28"/></name></name></expr>;<pos:position pos:line="107" pos:column="29"/></expr_stmt>
}<pos:position pos:line="108" pos:column="2"/></block></function>
</unit>

<unit xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C" filename="jamss-app2/app.c" pos:tabs="8" hash="d2fad905cf2e4d1e8429c413832c299ee27760ad"><comment type="block" pos:line="1" pos:column="1">/**
 * Go around with ultra sound sensor Ver0.2
 * Searching materials and goals.
 *
 * Robot construction: Educator Vehicle
 *
 * References:
 * http://robotsquare.com/wp-content/uploads/2013/10/45544_educator.pdf
 * http://thetechnicgear.com/2014/03/howto-create-line-following-robot-using-mindstorms/
 */</comment>

<cpp:include pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">include<pos:position pos:line="12" pos:column="9"/></cpp:directive> <cpp:file pos:line="12" pos:column="10">"ev3api.h"<pos:position pos:line="12" pos:column="20"/></cpp:file></cpp:include>
<cpp:include pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">include<pos:position pos:line="13" pos:column="9"/></cpp:directive> <cpp:file pos:line="13" pos:column="10">"app.h"<pos:position pos:line="13" pos:column="17"/></cpp:file></cpp:include>
<cpp:include pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">include<pos:position pos:line="14" pos:column="9"/></cpp:directive> <cpp:file pos:line="14" pos:column="10">"global.h"<pos:position pos:line="14" pos:column="20"/></cpp:file></cpp:include>
<cpp:include pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">include<pos:position pos:line="15" pos:column="9"/></cpp:directive> <cpp:file pos:line="15" pos:column="10">"sensor.h"<pos:position pos:line="15" pos:column="20"/></cpp:file></cpp:include>
<cpp:include pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">include<pos:position pos:line="16" pos:column="9"/></cpp:directive> <cpp:file pos:line="16" pos:column="10">"control.h"<pos:position pos:line="16" pos:column="21"/></cpp:file></cpp:include>
<cpp:include pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">include<pos:position pos:line="17" pos:column="9"/></cpp:directive> <cpp:file pos:line="17" pos:column="10">"actuator.h"<pos:position pos:line="17" pos:column="22"/></cpp:file></cpp:include>
<cpp:include pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">include<pos:position pos:line="18" pos:column="9"/></cpp:directive> <cpp:file pos:line="18" pos:column="10">"sound.h"<pos:position pos:line="18" pos:column="19"/></cpp:file></cpp:include>
<cpp:include pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">include<pos:position pos:line="19" pos:column="9"/></cpp:directive> <cpp:file pos:line="19" pos:column="10">&lt;stdlib.h&gt;<pos:position pos:line="19" pos:column="23"/></cpp:file></cpp:include>

<cpp:define pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">define<pos:position pos:line="21" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="21" pos:column="9">DEBUG<pos:position pos:line="21" pos:column="14"/></name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">ifdef<pos:position pos:line="23" pos:column="7"/></cpp:directive> <name pos:line="23" pos:column="8">DEBUG<pos:position pos:line="23" pos:column="13"/></name></cpp:ifdef>
<cpp:define pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">define<pos:position pos:line="24" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="24" pos:column="9">_debug<pos:position pos:line="24" pos:column="15"/></name><parameter_list pos:line="24" pos:column="15">(<parameter><type><name pos:line="24" pos:column="16">x<pos:position pos:line="24" pos:column="17"/></name></type></parameter>)<pos:position pos:line="24" pos:column="18"/></parameter_list></cpp:macro> <cpp:value pos:line="24" pos:column="19">(x)<pos:position pos:line="24" pos:column="22"/></cpp:value></cpp:define>
<cpp:else pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">else<pos:position pos:line="25" pos:column="6"/></cpp:directive></cpp:else>
<cpp:define pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">define<pos:position pos:line="26" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="26" pos:column="9">_debug<pos:position pos:line="26" pos:column="15"/></name><parameter_list pos:line="26" pos:column="15">(<parameter><type><name pos:line="26" pos:column="16">x<pos:position pos:line="26" pos:column="17"/></name></type></parameter>)<pos:position pos:line="26" pos:column="18"/></parameter_list></cpp:macro></cpp:define>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>

<comment type="block" pos:line="29" pos:column="1">/**
 * Define the connection ports of the sensors and motors.
 * By default, this application uses the following ports:
 * Ultra sonic sensor: Port 1
 * Touch sensor: Port 2
 * Color sensor: Port 3
 * Left motor:   Port B
 * Right motor:  Port C
 * Sensor motor: Port D
 */</comment>
<decl_stmt><decl><type><specifier pos:line="39" pos:column="1">const<pos:position pos:line="39" pos:column="6"/></specifier> <name pos:line="39" pos:column="7">int<pos:position pos:line="39" pos:column="10"/></name></type> <name pos:line="39" pos:column="11">touch_sensor<pos:position pos:line="39" pos:column="23"/></name> <init pos:line="39" pos:column="24">= <expr><name pos:line="39" pos:column="26">EV3_PORT_2<pos:position pos:line="39" pos:column="36"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="39" pos:column="38">color_sensor<pos:position pos:line="39" pos:column="50"/></name> <init pos:line="39" pos:column="51">= <expr><name pos:line="39" pos:column="53">EV3_PORT_3<pos:position pos:line="39" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="39" pos:column="64"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="40" pos:column="1">const<pos:position pos:line="40" pos:column="6"/></specifier> <name pos:line="40" pos:column="7">int<pos:position pos:line="40" pos:column="10"/></name></type> <name pos:line="40" pos:column="11">left_motor<pos:position pos:line="40" pos:column="21"/></name> <init pos:line="40" pos:column="22">= <expr><name pos:line="40" pos:column="24">EV3_PORT_B<pos:position pos:line="40" pos:column="34"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="40" pos:column="36">right_motor<pos:position pos:line="40" pos:column="47"/></name> <init pos:line="40" pos:column="48">= <expr><name pos:line="40" pos:column="50">EV3_PORT_C<pos:position pos:line="40" pos:column="60"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="40" pos:column="62">sensor_motor<pos:position pos:line="40" pos:column="74"/></name> <init pos:line="40" pos:column="75">= <expr><name pos:line="40" pos:column="77">EV3_PORT_D<pos:position pos:line="40" pos:column="87"/></name></expr></init></decl>;<pos:position pos:line="40" pos:column="88"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="41" pos:column="1">const<pos:position pos:line="41" pos:column="6"/></specifier> <name pos:line="41" pos:column="7">int<pos:position pos:line="41" pos:column="10"/></name></type> <name pos:line="41" pos:column="11">ultrasonic_sensor<pos:position pos:line="41" pos:column="28"/></name> <init pos:line="41" pos:column="29">= <expr><name pos:line="41" pos:column="31">EV3_PORT_1<pos:position pos:line="41" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="41" pos:column="42"/></decl_stmt>

<function><specifier pos:line="43" pos:column="1">static<pos:position pos:line="43" pos:column="7"/></specifier> <type><name pos:line="43" pos:column="8">void<pos:position pos:line="43" pos:column="12"/></name></type> <name pos:line="43" pos:column="13">button_clicked_handler<pos:position pos:line="43" pos:column="35"/></name><parameter_list pos:line="43" pos:column="35">(<parameter><decl><type><name pos:line="43" pos:column="36">intptr_t<pos:position pos:line="43" pos:column="44"/></name></type> <name pos:line="43" pos:column="45">button<pos:position pos:line="43" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="43" pos:column="52"/></parameter_list> <block pos:line="43" pos:column="53">{
  <switch pos:line="44" pos:column="3">switch<condition pos:line="44" pos:column="9">(<expr><name pos:line="44" pos:column="10">button<pos:position pos:line="44" pos:column="16"/></name></expr>)<pos:position pos:line="44" pos:column="17"/></condition> <block pos:line="44" pos:column="18">{
  <case pos:line="45" pos:column="3">case <expr><name pos:line="45" pos:column="8">BACK_BUTTON<pos:position pos:line="45" pos:column="19"/></name></expr>:<pos:position pos:line="45" pos:column="20"/></case>
<cpp:if pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">if<pos:position pos:line="46" pos:column="4"/></cpp:directive> <expr><operator pos:line="46" pos:column="5">!<pos:position pos:line="46" pos:column="6"/></operator><call><name pos:line="46" pos:column="6">defined<pos:position pos:line="46" pos:column="13"/></name><argument_list pos:line="46" pos:column="13">(<argument><expr><name pos:line="46" pos:column="14">BUILD_MODULE<pos:position pos:line="46" pos:column="26"/></name></expr></argument>)<pos:position pos:line="46" pos:column="27"/></argument_list></call></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">syslog<pos:position pos:line="47" pos:column="11"/></name><argument_list pos:line="47" pos:column="11">(<argument><expr><name pos:line="47" pos:column="12">LOG_NOTICE<pos:position pos:line="47" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="24">"Back button clicked."<pos:position pos:line="47" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="48"/></expr_stmt>
<cpp:endif pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">endif<pos:position pos:line="48" pos:column="7"/></cpp:directive></cpp:endif>
    <break pos:line="49" pos:column="5">break;<pos:position pos:line="49" pos:column="11"/></break>
  }<pos:position pos:line="50" pos:column="4"/></block></switch>
}<pos:position pos:line="51" pos:column="2"/></block></function>

<comment type="block" pos:line="53" pos:column="1">/**
 * Global variable definitions
 */</comment>

<decl_stmt><decl><type><name pos:line="57" pos:column="1">int<pos:position pos:line="57" pos:column="4"/></name></type> <name><name pos:line="57" pos:column="5">g_n_distance<pos:position pos:line="57" pos:column="17"/></name><index pos:line="57" pos:column="17">[<expr><literal type="number" pos:line="57" pos:column="18">161<pos:position pos:line="57" pos:column="21"/></literal></expr>]<pos:position pos:line="57" pos:column="22"/></index></name></decl>;<pos:position pos:line="57" pos:column="23"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="58" pos:column="1">int<pos:position pos:line="58" pos:column="4"/></name></type> <name pos:line="58" pos:column="5">g_sensor_direction<pos:position pos:line="58" pos:column="23"/></name> <init pos:line="58" pos:column="24">= <expr><literal type="number" pos:line="58" pos:column="26">1<pos:position pos:line="58" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="58" pos:column="28"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="59" pos:column="1">t_control_input<pos:position pos:line="59" pos:column="16"/></name></type> <name pos:line="59" pos:column="17">g_in<pos:position pos:line="59" pos:column="21"/></name></decl>;<pos:position pos:line="59" pos:column="22"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="60" pos:column="1">t_control_output<pos:position pos:line="60" pos:column="17"/></name></type> <name pos:line="60" pos:column="18">g_out<pos:position pos:line="60" pos:column="23"/></name></decl>;<pos:position pos:line="60" pos:column="24"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="61" pos:column="1">t_status<pos:position pos:line="61" pos:column="9"/></name></type> <name pos:line="61" pos:column="10">g_status<pos:position pos:line="61" pos:column="18"/></name> <init pos:line="61" pos:column="19">= <expr><name pos:line="61" pos:column="21">s2_normal<pos:position pos:line="61" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="61" pos:column="31"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="62" pos:column="1">int<pos:position pos:line="62" pos:column="4"/></name></type> <name pos:line="62" pos:column="5">g_clk_count<pos:position pos:line="62" pos:column="16"/></name> <init pos:line="62" pos:column="17">= <expr><literal type="number" pos:line="62" pos:column="19">0<pos:position pos:line="62" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="62" pos:column="21"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="63" pos:column="1">int<pos:position pos:line="63" pos:column="4"/></name></type> <name pos:line="63" pos:column="5">g_step_back_count<pos:position pos:line="63" pos:column="22"/></name> <init pos:line="63" pos:column="23">= <expr><literal type="number" pos:line="63" pos:column="25">0<pos:position pos:line="63" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="63" pos:column="27"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="64" pos:column="1">int<pos:position pos:line="64" pos:column="4"/></name></type> <name pos:line="64" pos:column="5">g_normal_out_count<pos:position pos:line="64" pos:column="23"/></name> <init pos:line="64" pos:column="24">= <expr><literal type="number" pos:line="64" pos:column="26">0<pos:position pos:line="64" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="64" pos:column="28"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="65" pos:column="1">colorid_t<pos:position pos:line="65" pos:column="10"/></name></type> <name pos:line="65" pos:column="11">g_prev_color<pos:position pos:line="65" pos:column="23"/></name> <init pos:line="65" pos:column="24">= <expr><name pos:line="65" pos:column="26">COLOR_WHITE<pos:position pos:line="65" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="65" pos:column="38"/></decl_stmt>


<function><type><name pos:line="68" pos:column="1">void<pos:position pos:line="68" pos:column="5"/></name></type> <name pos:line="68" pos:column="6">main_task<pos:position pos:line="68" pos:column="15"/></name><parameter_list pos:line="68" pos:column="15">(<parameter><decl><type><name pos:line="68" pos:column="16">intptr_t<pos:position pos:line="68" pos:column="24"/></name></type> <name pos:line="68" pos:column="25">unused<pos:position pos:line="68" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="68" pos:column="32"/></parameter_list> <block pos:line="68" pos:column="33">{
  <comment type="block" pos:line="69" pos:column="3">/**
  * Initialization
  */</comment>
  <comment type="line" pos:line="72" pos:column="3">// Initialize global variable</comment>
  <expr_stmt><expr><name><name pos:line="73" pos:column="3">g_out<pos:position pos:line="73" pos:column="8"/></name><operator pos:line="73" pos:column="8">.<pos:position pos:line="73" pos:column="9"/></operator><name pos:line="73" pos:column="9">speed_l<pos:position pos:line="73" pos:column="16"/></name></name> <operator pos:line="73" pos:column="17">=<pos:position pos:line="73" pos:column="18"/></operator> <name><name pos:line="73" pos:column="19">g_out<pos:position pos:line="73" pos:column="24"/></name><operator pos:line="73" pos:column="24">.<pos:position pos:line="73" pos:column="25"/></operator><name pos:line="73" pos:column="25">speed_r<pos:position pos:line="73" pos:column="32"/></name></name> <operator pos:line="73" pos:column="33">=<pos:position pos:line="73" pos:column="34"/></operator> <literal type="number" pos:line="73" pos:column="35">0<pos:position pos:line="73" pos:column="36"/></literal></expr>;<pos:position pos:line="73" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="74" pos:column="3">g_out<pos:position pos:line="74" pos:column="8"/></name><operator pos:line="74" pos:column="8">.<pos:position pos:line="74" pos:column="9"/></operator><name pos:line="74" pos:column="9">speed_sensor<pos:position pos:line="74" pos:column="21"/></name></name> <operator pos:line="74" pos:column="22">=<pos:position pos:line="74" pos:column="23"/></operator> <literal type="number" pos:line="74" pos:column="24">0<pos:position pos:line="74" pos:column="25"/></literal></expr>;<pos:position pos:line="74" pos:column="26"/></expr_stmt>

  <comment type="line" pos:line="76" pos:column="3">// Register button handlers</comment>
  <expr_stmt><expr><call><name pos:line="77" pos:column="3">ev3_button_set_on_clicked<pos:position pos:line="77" pos:column="28"/></name><argument_list pos:line="77" pos:column="28">(<argument><expr><name pos:line="77" pos:column="29">BACK_BUTTON<pos:position pos:line="77" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="42">button_clicked_handler<pos:position pos:line="77" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="66">BACK_BUTTON<pos:position pos:line="77" pos:column="77"/></name></expr></argument>)<pos:position pos:line="77" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="79"/></expr_stmt>

  <comment type="line" pos:line="79" pos:column="3">// Configure motors</comment>
  <expr_stmt><expr><call><name pos:line="80" pos:column="3">ev3_motor_config<pos:position pos:line="80" pos:column="19"/></name><argument_list pos:line="80" pos:column="19">(<argument><expr><name pos:line="80" pos:column="20">left_motor<pos:position pos:line="80" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="32">LARGE_MOTOR<pos:position pos:line="80" pos:column="43"/></name></expr></argument>)<pos:position pos:line="80" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="81" pos:column="3">ev3_motor_config<pos:position pos:line="81" pos:column="19"/></name><argument_list pos:line="81" pos:column="19">(<argument><expr><name pos:line="81" pos:column="20">right_motor<pos:position pos:line="81" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="33">LARGE_MOTOR<pos:position pos:line="81" pos:column="44"/></name></expr></argument>)<pos:position pos:line="81" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="82" pos:column="3">ev3_motor_config<pos:position pos:line="82" pos:column="19"/></name><argument_list pos:line="82" pos:column="19">(<argument><expr><name pos:line="82" pos:column="20">sensor_motor<pos:position pos:line="82" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="34">MEDIUM_MOTOR<pos:position pos:line="82" pos:column="46"/></name></expr></argument>)<pos:position pos:line="82" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="48"/></expr_stmt>

  <comment type="line" pos:line="84" pos:column="3">// Configure sensors</comment>
  <expr_stmt><expr><call><name pos:line="85" pos:column="3">ev3_sensor_config<pos:position pos:line="85" pos:column="20"/></name><argument_list pos:line="85" pos:column="20">(<argument><expr><name pos:line="85" pos:column="21">ultrasonic_sensor<pos:position pos:line="85" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="40">ULTRASONIC_SENSOR<pos:position pos:line="85" pos:column="57"/></name></expr></argument>)<pos:position pos:line="85" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="59"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="86" pos:column="3">ev3_sensor_config<pos:position pos:line="86" pos:column="20"/></name><argument_list pos:line="86" pos:column="20">(<argument><expr><name pos:line="86" pos:column="21">touch_sensor<pos:position pos:line="86" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="35">TOUCH_SENSOR<pos:position pos:line="86" pos:column="47"/></name></expr></argument>)<pos:position pos:line="86" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="87" pos:column="3">ev3_sensor_config<pos:position pos:line="87" pos:column="20"/></name><argument_list pos:line="87" pos:column="20">(<argument><expr><name pos:line="87" pos:column="21">color_sensor<pos:position pos:line="87" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="35">COLOR_SENSOR<pos:position pos:line="87" pos:column="47"/></name></expr></argument>)<pos:position pos:line="87" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="49"/></expr_stmt>

  <comment type="line" pos:line="89" pos:column="3">// Configure lCD</comment>
  <expr_stmt><expr><call><name pos:line="90" pos:column="3">ev3_lcd_set_font<pos:position pos:line="90" pos:column="19"/></name><argument_list pos:line="90" pos:column="19">(<argument><expr><name pos:line="90" pos:column="20">EV3_FONT_MEDIUM<pos:position pos:line="90" pos:column="35"/></name></expr></argument>)<pos:position pos:line="90" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="37"/></expr_stmt>

  <comment type="block" pos:line="92" pos:column="3">/**
   * Setup 1 - Waiting Seonsor motor is set in center
   */</comment>
  <expr_stmt><expr><call><name pos:line="95" pos:column="3">ev3_speaker_play_tone<pos:position pos:line="95" pos:column="24"/></name><argument_list pos:line="95" pos:column="24">(<argument><expr><name pos:line="95" pos:column="25">NOTE_C4<pos:position pos:line="95" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="95" pos:column="34">100<pos:position pos:line="95" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="96" pos:column="3">tslp_tsk<pos:position pos:line="96" pos:column="11"/></name><argument_list pos:line="96" pos:column="11">(<argument><expr><literal type="number" pos:line="96" pos:column="12">100<pos:position pos:line="96" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="97" pos:column="3">ev3_speaker_play_tone<pos:position pos:line="97" pos:column="24"/></name><argument_list pos:line="97" pos:column="24">(<argument><expr><name pos:line="97" pos:column="25">NOTE_C4<pos:position pos:line="97" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="97" pos:column="34">100<pos:position pos:line="97" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="98" pos:column="3">printf<pos:position pos:line="98" pos:column="9"/></name><argument_list pos:line="98" pos:column="9">(<argument><expr><literal type="string" pos:line="98" pos:column="10">"Press the touch sensor to measure light intensity of WHITE.\n"<pos:position pos:line="98" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="75"/></expr_stmt>
  <while pos:line="99" pos:column="3">while<condition pos:line="99" pos:column="8">(<expr><operator pos:line="99" pos:column="9">!<pos:position pos:line="99" pos:column="10"/></operator><call><name pos:line="99" pos:column="10">ev3_touch_sensor_is_pressed<pos:position pos:line="99" pos:column="37"/></name><argument_list pos:line="99" pos:column="37">(<argument><expr><name pos:line="99" pos:column="38">touch_sensor<pos:position pos:line="99" pos:column="50"/></name></expr></argument>)<pos:position pos:line="99" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="99" pos:column="52"/></condition><block type="pseudo"><empty_stmt pos:line="99" pos:column="52">;<pos:position pos:line="99" pos:column="53"/></empty_stmt></block></while>
  <while pos:line="100" pos:column="3">while<condition pos:line="100" pos:column="8">(<expr><call><name pos:line="100" pos:column="9">ev3_touch_sensor_is_pressed<pos:position pos:line="100" pos:column="36"/></name><argument_list pos:line="100" pos:column="36">(<argument><expr><name pos:line="100" pos:column="37">touch_sensor<pos:position pos:line="100" pos:column="49"/></name></expr></argument>)<pos:position pos:line="100" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="100" pos:column="51"/></condition><block type="pseudo"><empty_stmt pos:line="100" pos:column="51">;<pos:position pos:line="100" pos:column="52"/></empty_stmt></block></while>
  <expr_stmt><expr><call><name pos:line="101" pos:column="3">ev3_motor_reset_counts<pos:position pos:line="101" pos:column="25"/></name><argument_list pos:line="101" pos:column="25">(<argument><expr><name pos:line="101" pos:column="26">sensor_motor<pos:position pos:line="101" pos:column="38"/></name></expr></argument>)<pos:position pos:line="101" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="40"/></expr_stmt>
  <comment type="line" pos:line="102" pos:column="3">//printf("WHITE light intensity: %d.\n", white);</comment>

  <comment type="block" pos:line="104" pos:column="3">/**
   * Setup 2 - Calibrate Ultra Sound Sensor
   */</comment>
  <expr_stmt><expr><call><name pos:line="107" pos:column="3">ev3_speaker_play_tone<pos:position pos:line="107" pos:column="24"/></name><argument_list pos:line="107" pos:column="24">(<argument><expr><name pos:line="107" pos:column="25">NOTE_C4<pos:position pos:line="107" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="107" pos:column="34">100<pos:position pos:line="107" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="108" pos:column="3">tslp_tsk<pos:position pos:line="108" pos:column="11"/></name><argument_list pos:line="108" pos:column="11">(<argument><expr><literal type="number" pos:line="108" pos:column="12">100<pos:position pos:line="108" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="109" pos:column="3">ev3_speaker_play_tone<pos:position pos:line="109" pos:column="24"/></name><argument_list pos:line="109" pos:column="24">(<argument><expr><name pos:line="109" pos:column="25">NOTE_C4<pos:position pos:line="109" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="109" pos:column="34">100<pos:position pos:line="109" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="110" pos:column="3">printf<pos:position pos:line="110" pos:column="9"/></name><argument_list pos:line="110" pos:column="9">(<argument><expr><literal type="string" pos:line="110" pos:column="10">"Press the touch sensor to measure light intensity of BLACK.\n"<pos:position pos:line="110" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="75"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="111" pos:column="3">ev3_motor_rotate<pos:position pos:line="111" pos:column="19"/></name><argument_list pos:line="111" pos:column="19">(<argument><expr><name pos:line="111" pos:column="20">sensor_motor<pos:position pos:line="111" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="34">SENSOR_MAX_DEG<pos:position pos:line="111" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="50">SENSOR_SPEED<pos:position pos:line="111" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="64">false<pos:position pos:line="111" pos:column="69"/></name></expr></argument>)<pos:position pos:line="111" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="71"/></expr_stmt>
  <decl_stmt><decl><type><name pos:line="112" pos:column="3">int<pos:position pos:line="112" pos:column="6"/></name></type> <name pos:line="112" pos:column="7">sensor_calib_i<pos:position pos:line="112" pos:column="21"/></name> <init pos:line="112" pos:column="22">= <expr><literal type="number" pos:line="112" pos:column="24">0<pos:position pos:line="112" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="112" pos:column="26"/></decl_stmt>
  <while pos:line="113" pos:column="3">while <condition pos:line="113" pos:column="9">(<expr><name pos:line="113" pos:column="10">sensor_calib_i<pos:position pos:line="113" pos:column="24"/></name> <operator pos:line="113" pos:column="25">&lt;<pos:position pos:line="113" pos:column="29"/></operator> <name pos:line="113" pos:column="27">SENSOR_CALIB_COUNT<pos:position pos:line="113" pos:column="45"/></name></expr>)<pos:position pos:line="113" pos:column="46"/></condition><block pos:line="113" pos:column="46">{
    <comment type="line" pos:line="114" pos:column="5">// ultra sound sensor calibration (Record standard distance)</comment>
    <decl_stmt><decl><type><name pos:line="115" pos:column="5">int<pos:position pos:line="115" pos:column="8"/></name></type> <name pos:line="115" pos:column="9">d<pos:position pos:line="115" pos:column="10"/></name> <init pos:line="115" pos:column="11">= <expr><call><name pos:line="115" pos:column="13">ev3_ultrasonic_sensor_get_distance<pos:position pos:line="115" pos:column="47"/></name><argument_list pos:line="115" pos:column="47">(<argument><expr><name pos:line="115" pos:column="48">ultrasonic_sensor<pos:position pos:line="115" pos:column="65"/></name></expr></argument>)<pos:position pos:line="115" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="115" pos:column="67"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="116" pos:column="5">int<pos:position pos:line="116" pos:column="8"/></name></type> <name pos:line="116" pos:column="9">sensor_motor_deg<pos:position pos:line="116" pos:column="25"/></name> <init pos:line="116" pos:column="26">= <expr><call><name pos:line="116" pos:column="28">ev3_motor_get_counts<pos:position pos:line="116" pos:column="48"/></name><argument_list pos:line="116" pos:column="48">(<argument><expr><name pos:line="116" pos:column="49">sensor_motor<pos:position pos:line="116" pos:column="61"/></name></expr></argument>)<pos:position pos:line="116" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="116" pos:column="63"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="117" pos:column="5">int<pos:position pos:line="117" pos:column="8"/></name></type> <name pos:line="117" pos:column="9">di<pos:position pos:line="117" pos:column="11"/></name> <init pos:line="117" pos:column="12">= <expr><name pos:line="117" pos:column="14">sensor_motor_deg<pos:position pos:line="117" pos:column="30"/></name> <operator pos:line="117" pos:column="31">+<pos:position pos:line="117" pos:column="32"/></operator> <name pos:line="117" pos:column="33">SENSOR_MAX_DEG<pos:position pos:line="117" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="117" pos:column="48"/></decl_stmt>
    <expr_stmt><expr><name pos:line="118" pos:column="5">di<pos:position pos:line="118" pos:column="7"/></name> <operator pos:line="118" pos:column="8">=<pos:position pos:line="118" pos:column="9"/></operator> <ternary><condition><expr><name pos:line="118" pos:column="10">di<pos:position pos:line="118" pos:column="12"/></name> <operator pos:line="118" pos:column="13">&lt;<pos:position pos:line="118" pos:column="17"/></operator> <literal type="number" pos:line="118" pos:column="15">0<pos:position pos:line="118" pos:column="16"/></literal></expr> ?<pos:position pos:line="118" pos:column="18"/></condition><then pos:line="118" pos:column="18"> <expr><literal type="number" pos:line="118" pos:column="19">0<pos:position pos:line="118" pos:column="20"/></literal></expr> <pos:position pos:line="118" pos:column="21"/></then><else pos:line="118" pos:column="21">: <expr><ternary><condition><expr><name pos:line="118" pos:column="23">SENSOR_MAX_DEG<pos:position pos:line="118" pos:column="37"/></name> <operator pos:line="118" pos:column="38">*<pos:position pos:line="118" pos:column="39"/></operator> <literal type="number" pos:line="118" pos:column="40">2<pos:position pos:line="118" pos:column="41"/></literal> <operator pos:line="118" pos:column="42">&lt;<pos:position pos:line="118" pos:column="46"/></operator> <name pos:line="118" pos:column="44">di<pos:position pos:line="118" pos:column="46"/></name></expr> ?<pos:position pos:line="118" pos:column="48"/></condition><then pos:line="118" pos:column="48"> <expr><name pos:line="118" pos:column="49">SENSOR_MAX_DEG<pos:position pos:line="118" pos:column="63"/></name> <operator pos:line="118" pos:column="64">*<pos:position pos:line="118" pos:column="65"/></operator> <literal type="number" pos:line="118" pos:column="66">2<pos:position pos:line="118" pos:column="67"/></literal></expr> <pos:position pos:line="118" pos:column="68"/></then><else pos:line="118" pos:column="68">: <expr><name pos:line="118" pos:column="70">di<pos:position pos:line="118" pos:column="72"/></name></expr></else></ternary></expr></else></ternary></expr>;<pos:position pos:line="118" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="119" pos:column="5">g_n_distance<pos:position pos:line="119" pos:column="17"/></name><index pos:line="119" pos:column="17">[<expr><name pos:line="119" pos:column="18">di<pos:position pos:line="119" pos:column="20"/></name></expr>]<pos:position pos:line="119" pos:column="21"/></index></name> <operator pos:line="119" pos:column="22">=<pos:position pos:line="119" pos:column="23"/></operator> <name pos:line="119" pos:column="24">d<pos:position pos:line="119" pos:column="25"/></name></expr>;<pos:position pos:line="119" pos:column="26"/></expr_stmt>

    <comment type="line" pos:line="121" pos:column="5">// rotate ultra sound sensor</comment>
    <expr_stmt><expr><call><name pos:line="122" pos:column="5">sensor_motor_rotate<pos:position pos:line="122" pos:column="24"/></name><argument_list pos:line="122" pos:column="24">(<argument><expr><name pos:line="122" pos:column="25">SENSOR_SPEED<pos:position pos:line="122" pos:column="37"/></name></expr></argument>)<pos:position pos:line="122" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="123" pos:column="5">tslp_tsk<pos:position pos:line="123" pos:column="13"/></name><argument_list pos:line="123" pos:column="13">(<argument><expr><literal type="number" pos:line="123" pos:column="14">1<pos:position pos:line="123" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name pos:line="124" pos:column="5">sensor_calib_i<pos:position pos:line="124" pos:column="19"/></name><operator pos:line="124" pos:column="19">++<pos:position pos:line="124" pos:column="21"/></operator></expr>;<pos:position pos:line="124" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="125" pos:column="4"/></block></while>
  <comment type="line" pos:line="126" pos:column="3">//printf("BLACK light intensity: %d.\n", black);</comment>

  <comment type="block" pos:line="128" pos:column="3">/**
   * Main Loop!!
   */</comment>
  <expr_stmt><expr><name pos:line="131" pos:column="3">g_status<pos:position pos:line="131" pos:column="11"/></name> <operator pos:line="131" pos:column="12">=<pos:position pos:line="131" pos:column="13"/></operator> <name pos:line="131" pos:column="14">s2_normal<pos:position pos:line="131" pos:column="23"/></name></expr>;<pos:position pos:line="131" pos:column="24"/></expr_stmt>
  <while pos:line="132" pos:column="3">while <condition pos:line="132" pos:column="9">(<expr><literal type="number" pos:line="132" pos:column="10">1<pos:position pos:line="132" pos:column="11"/></literal></expr>)<pos:position pos:line="132" pos:column="12"/></condition> <block pos:line="132" pos:column="13">{
    <expr_stmt><expr><name pos:line="133" pos:column="5">g_clk_count<pos:position pos:line="133" pos:column="16"/></name> <operator pos:line="133" pos:column="17">=<pos:position pos:line="133" pos:column="18"/></operator> <operator pos:line="133" pos:column="19">(<pos:position pos:line="133" pos:column="20"/></operator><name pos:line="133" pos:column="20">g_clk_count<pos:position pos:line="133" pos:column="31"/></name> <operator pos:line="133" pos:column="32">+<pos:position pos:line="133" pos:column="33"/></operator> <literal type="number" pos:line="133" pos:column="34">1<pos:position pos:line="133" pos:column="35"/></literal><operator pos:line="133" pos:column="35">)<pos:position pos:line="133" pos:column="36"/></operator> <operator pos:line="133" pos:column="37">%<pos:position pos:line="133" pos:column="38"/></operator> <literal type="number" pos:line="133" pos:column="39">5<pos:position pos:line="133" pos:column="40"/></literal></expr>;<pos:position pos:line="133" pos:column="41"/></expr_stmt>
    <comment type="line" pos:line="134" pos:column="5">// Fetch input</comment>
    <expr_stmt><expr><call><name pos:line="135" pos:column="5">fetch_control_input<pos:position pos:line="135" pos:column="24"/></name><argument_list pos:line="135" pos:column="24">()<pos:position pos:line="135" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="27"/></expr_stmt>

    <comment type="line" pos:line="137" pos:column="5">// Control</comment>
    <expr_stmt><expr><call><name pos:line="138" pos:column="5">control_main<pos:position pos:line="138" pos:column="17"/></name><argument_list pos:line="138" pos:column="17">()<pos:position pos:line="138" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="20"/></expr_stmt>

    <comment type="line" pos:line="140" pos:column="5">// Hazard Check!!</comment>
    <comment type="line" pos:line="141" pos:column="5">// if gyro sensor does not detect moving long time...</comment>
    <comment type="line" pos:line="142" pos:column="5">// if gyro sensor detects slant...</comment>
    <comment type="line" pos:line="143" pos:column="5">// if too long no detection...</comment>
    <comment type="line" pos:line="144" pos:column="5">// if sensor motor doesn't rotate...</comment>

    <comment type="line" pos:line="146" pos:column="5">// Exec actuators</comment>
    <expr_stmt><expr><call><name pos:line="147" pos:column="5">motor_run<pos:position pos:line="147" pos:column="14"/></name><argument_list pos:line="147" pos:column="14">()<pos:position pos:line="147" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="17"/></expr_stmt>
    <if pos:line="148" pos:column="5">if <condition pos:line="148" pos:column="8">(<expr><name pos:line="148" pos:column="9">g_status<pos:position pos:line="148" pos:column="17"/></name> <operator pos:line="148" pos:column="18">==<pos:position pos:line="148" pos:column="20"/></operator> <name pos:line="148" pos:column="21">s2_normal<pos:position pos:line="148" pos:column="30"/></name> <operator pos:line="148" pos:column="31">||<pos:position pos:line="148" pos:column="33"/></operator> <name pos:line="148" pos:column="34">g_status<pos:position pos:line="148" pos:column="42"/></name> <operator pos:line="148" pos:column="43">==<pos:position pos:line="148" pos:column="45"/></operator> <name pos:line="148" pos:column="46">s2_ready<pos:position pos:line="148" pos:column="54"/></name></expr>)<pos:position pos:line="148" pos:column="55"/></condition><then pos:line="148" pos:column="55"> <block pos:line="148" pos:column="56">{
      <expr_stmt><expr><call><name pos:line="149" pos:column="7">lcd_show<pos:position pos:line="149" pos:column="15"/></name><argument_list pos:line="149" pos:column="15">(<argument><expr><name pos:line="149" pos:column="16">g_clk_count<pos:position pos:line="149" pos:column="27"/></name></expr></argument>)<pos:position pos:line="149" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="150" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="152" pos:column="5">tslp_tsk<pos:position pos:line="152" pos:column="13"/></name><argument_list pos:line="152" pos:column="13">(<argument><expr><literal type="number" pos:line="152" pos:column="14">1<pos:position pos:line="152" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="152" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="153" pos:column="4"/></block></while>
}<pos:position pos:line="154" pos:column="2"/></block></function>
</unit>

</unit>
